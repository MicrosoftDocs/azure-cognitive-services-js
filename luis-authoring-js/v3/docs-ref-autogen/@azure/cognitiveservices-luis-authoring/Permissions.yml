### YamlMime:TSType
name: Permissions
uid: '@azure/cognitiveservices-luis-authoring.Permissions'
package: '@azure/cognitiveservices-luis-authoring'
summary: Class representing a Permissions.
fullName: Permissions
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Permissions(LUISAuthoringClientContext)
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.constructor'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: Create a Permissions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Permissions(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'add(string, UserCollaborator, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.add'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Adds a user to the allowed list of users to access this LUIS application.
      Users are added using

      their email address.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: userToAdd
          type: >-
            <xref uid="@azure/cognitiveservices-luis-authoring.UserCollaborator"
            />
          description: A model containing the user's email address.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PermissionsAddResponse" />&gt;
        description: Promise<Models.PermissionsAddResponse>
  - name: >-
      add(string, UserCollaborator, RequestOptionsBase,
      ServiceCallback<OperationStatus>)
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.add_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, options:
        RequestOptionsBase, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: userToAdd
          type: >-
            <xref uid="@azure/cognitiveservices-luis-authoring.UserCollaborator"
            />
          description: A model containing the user's email address.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'add(string, UserCollaborator, ServiceCallback<OperationStatus>)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.add_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: userToAdd
          type: >-
            <xref uid="@azure/cognitiveservices-luis-authoring.UserCollaborator"
            />
          description: A model containing the user's email address.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, UserCollaborator, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Removes a user from the allowed list of users to access this LUIS
      application. Users are removed

      using their email address.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: userToDelete
          type: >-
            <xref uid="@azure/cognitiveservices-luis-authoring.UserCollaborator"
            />
          description: A model containing the user's email address.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PermissionsDeleteMethodResponse" />&gt;
        description: Promise<Models.PermissionsDeleteMethodResponse>
  - name: >-
      deleteMethod(string, UserCollaborator, RequestOptionsBase,
      ServiceCallback<OperationStatus>)
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: userToDelete
          type: >-
            <xref uid="@azure/cognitiveservices-luis-authoring.UserCollaborator"
            />
          description: A model containing the user's email address.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, UserCollaborator, ServiceCallback<OperationStatus>)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: userToDelete
          type: >-
            <xref uid="@azure/cognitiveservices-luis-authoring.UserCollaborator"
            />
          description: A model containing the user's email address.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'list(string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.list'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Gets the list of user emails that have permissions to access your
      application.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(appId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PermissionsListResponse" />&gt;
        description: Promise<Models.PermissionsListResponse>
  - name: 'list(string, RequestOptionsBase, ServiceCallback<UserAccessList>)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.list_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(appId: string, options: RequestOptionsBase, callback:
        ServiceCallback<UserAccessList>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.UserAccessList" />&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<UserAccessList>)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.list_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(appId: string, callback: ServiceCallback<UserAccessList>)'
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.UserAccessList" />&gt;
          description: |
            The callback
  - name: 'update(string, CollaboratorsArray, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.update'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Replaces the current user access list with the new list sent in the body.
      If an empty list is

      sent, all access to other users will be removed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: collaborators
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.CollaboratorsArray" />
          description: A model containing a list of user email addresses.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PermissionsUpdateResponse" />&gt;
        description: Promise<Models.PermissionsUpdateResponse>
  - name: >-
      update(string, CollaboratorsArray, RequestOptionsBase,
      ServiceCallback<OperationStatus>)
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.update_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: collaborators
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.CollaboratorsArray" />
          description: A model containing a list of user email addresses.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'update(string, CollaboratorsArray, ServiceCallback<OperationStatus>)'
    uid: '@azure/cognitiveservices-luis-authoring.Permissions.update_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: collaborators
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.CollaboratorsArray" />
          description: A model containing a list of user email addresses.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
