### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions'
    name: Permissions
    fullName: Permissions
    children:
      - '@azure/cognitiveservices-luis-authoring.Permissions.add'
      - '@azure/cognitiveservices-luis-authoring.Permissions.add_2'
      - '@azure/cognitiveservices-luis-authoring.Permissions.add_1'
      - '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod'
      - '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod_2'
      - '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod_1'
      - '@azure/cognitiveservices-luis-authoring.Permissions.list'
      - '@azure/cognitiveservices-luis-authoring.Permissions.list_2'
      - '@azure/cognitiveservices-luis-authoring.Permissions.list_1'
      - '@azure/cognitiveservices-luis-authoring.Permissions.constructor'
      - '@azure/cognitiveservices-luis-authoring.Permissions.update'
      - '@azure/cognitiveservices-luis-authoring.Permissions.update_2'
      - '@azure/cognitiveservices-luis-authoring.Permissions.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Permissions.
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.add'
    name: 'add(string, UserCollaborator, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds a user to the allowed list of users to access this LUIS application.
      Users are added using

      their email address.
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: userToAdd
          type:
            - '@azure/cognitiveservices-luis-authoring.UserCollaborator'
          description: A model containing the user's email address.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PermissionsAddResponse>
        description: Promise<Models.PermissionsAddResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.add_2'
    name: >-
      add(string, UserCollaborator, RequestOptionsBase,
      ServiceCallback<OperationStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, options:
        RequestOptionsBase, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: userToAdd
          type:
            - '@azure/cognitiveservices-luis-authoring.UserCollaborator'
          description: A model containing the user's email address.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.add_1'
    name: 'add(string, UserCollaborator, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function add(appId: string, userToAdd: UserCollaborator, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: userToAdd
          type:
            - '@azure/cognitiveservices-luis-authoring.UserCollaborator'
          description: A model containing the user's email address.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod'
    name: 'deleteMethod(string, UserCollaborator, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes a user from the allowed list of users to access this LUIS
      application. Users are removed

      using their email address.
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: userToDelete
          type:
            - '@azure/cognitiveservices-luis-authoring.UserCollaborator'
          description: A model containing the user's email address.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PermissionsDeleteMethodResponse>
        description: Promise<Models.PermissionsDeleteMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod_2'
    name: >-
      deleteMethod(string, UserCollaborator, RequestOptionsBase,
      ServiceCallback<OperationStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: userToDelete
          type:
            - '@azure/cognitiveservices-luis-authoring.UserCollaborator'
          description: A model containing the user's email address.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.deleteMethod_1'
    name: 'deleteMethod(string, UserCollaborator, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(appId: string, userToDelete: UserCollaborator,
        callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: userToDelete
          type:
            - '@azure/cognitiveservices-luis-authoring.UserCollaborator'
          description: A model containing the user's email address.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.list'
    name: 'list(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the list of user emails that have permissions to access your
      application.
    syntax:
      content: 'function list(appId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PermissionsListResponse>
        description: Promise<Models.PermissionsListResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.list_2'
    name: 'list(string, RequestOptionsBase, ServiceCallback<UserAccessList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(appId: string, options: RequestOptionsBase, callback:
        ServiceCallback<UserAccessList>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.UserAccessList>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.list_1'
    name: 'list(string, ServiceCallback<UserAccessList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(appId: string, callback: ServiceCallback<UserAccessList>)'
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.UserAccessList>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.constructor'
    name: Permissions(LUISAuthoringClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Permissions.
    syntax:
      content: 'new Permissions(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.update'
    name: 'update(string, CollaboratorsArray, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replaces the current user access list with the new list sent in the body.
      If an empty list is

      sent, all access to other users will be removed.
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: collaborators
          type:
            - '@azure/cognitiveservices-luis-authoring.CollaboratorsArray'
          description: A model containing a list of user email addresses.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PermissionsUpdateResponse>
        description: Promise<Models.PermissionsUpdateResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.update_2'
    name: >-
      update(string, CollaboratorsArray, RequestOptionsBase,
      ServiceCallback<OperationStatus>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: collaborators
          type:
            - '@azure/cognitiveservices-luis-authoring.CollaboratorsArray'
          description: A model containing a list of user email addresses.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Permissions.update_1'
    name: 'update(string, CollaboratorsArray, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(appId: string, collaborators: CollaboratorsArray,
        callback: ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: collaborators
          type:
            - '@azure/cognitiveservices-luis-authoring.CollaboratorsArray'
          description: A model containing a list of user email addresses.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
references:
  - uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
    name: LUISAuthoringClientContext
    spec.typeScript:
      - name: LUISAuthoringClientContext
        fullName: LUISAuthoringClientContext
        uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
  - uid: '@azure/cognitiveservices-luis-authoring.UserCollaborator'
    name: UserCollaborator
    spec.typeScript:
      - name: UserCollaborator
        fullName: UserCollaborator
        uid: '@azure/cognitiveservices-luis-authoring.UserCollaborator'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/cognitiveservices-luis-authoring.OperationStatus'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-authoring.UserAccessList>
    name: UserAccessList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserAccessList
        fullName: UserAccessList
        uid: '@azure/cognitiveservices-luis-authoring.UserAccessList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-luis-authoring.CollaboratorsArray'
    name: CollaboratorsArray
    spec.typeScript:
      - name: CollaboratorsArray
        fullName: CollaboratorsArray
        uid: '@azure/cognitiveservices-luis-authoring.CollaboratorsArray'
