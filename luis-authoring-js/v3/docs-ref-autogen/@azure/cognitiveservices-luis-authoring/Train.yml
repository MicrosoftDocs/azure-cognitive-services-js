### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-luis-authoring.Train'
    name: Train
    fullName: Train
    children:
      - '@azure/cognitiveservices-luis-authoring.Train.getStatus'
      - '@azure/cognitiveservices-luis-authoring.Train.getStatus_2'
      - '@azure/cognitiveservices-luis-authoring.Train.getStatus_1'
      - '@azure/cognitiveservices-luis-authoring.Train.constructor'
      - '@azure/cognitiveservices-luis-authoring.Train.trainVersion'
      - '@azure/cognitiveservices-luis-authoring.Train.trainVersion_2'
      - '@azure/cognitiveservices-luis-authoring.Train.trainVersion_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Train.
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus'
    name: 'getStatus(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the training status of all models (intents and entities) for the
      specified LUIS app. You

      must call the train API to train the LUIS app before you call this API to
      get training status.

      "appID" specifies the LUIS app ID. "versionId" specifies the version
      number of the LUIS app. For

      example, "0.1".
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: versionId
          type:
            - string
          description: The version ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TrainGetStatusResponse>
        description: Promise<Models.TrainGetStatusResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus_2'
    name: >-
      getStatus(string, string, RequestOptionsBase,
      ServiceCallback<ModelTrainingInfo[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<ModelTrainingInfo[]>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: versionId
          type:
            - string
          description: The version ID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.ModelTrainingInfo[]>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus_1'
    name: 'getStatus(string, string, ServiceCallback<ModelTrainingInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, callback:
        ServiceCallback<ModelTrainingInfo[]>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: versionId
          type:
            - string
          description: The version ID.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.ModelTrainingInfo[]>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.constructor'
    name: Train(LUISAuthoringClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Train.
    syntax:
      content: 'new Train(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion'
    name: 'trainVersion(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a training request for a version of a specified LUIS app. This POST
      request initiates a

      request asynchronously. To determine whether the training request is
      successful, submit a GET

      request to get training status. Note: The application version is not fully
      trained unless all

      the models (intents and entities) are trained successfully or are up to
      date. To verify training

      success, get the training status at least once after training is complete.
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: versionId
          type:
            - string
          description: The version ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TrainTrainVersionResponse>
        description: Promise<Models.TrainTrainVersionResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion_2'
    name: >-
      trainVersion(string, string, RequestOptionsBase,
      ServiceCallback<EnqueueTrainingResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<EnqueueTrainingResponse>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: versionId
          type:
            - string
          description: The version ID.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion_1'
    name: 'trainVersion(string, string, ServiceCallback<EnqueueTrainingResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, callback:
        ServiceCallback<EnqueueTrainingResponse>)
      parameters:
        - id: appId
          type:
            - string
          description: The application ID.
        - id: versionId
          type:
            - string
          description: The version ID.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse>
          description: |
            The callback
    package: '@azure/cognitiveservices-luis-authoring'
references:
  - uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
    name: LUISAuthoringClientContext
    spec.typeScript:
      - name: LUISAuthoringClientContext
        fullName: LUISAuthoringClientContext
        uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-luis-authoring.ModelTrainingInfo[]>
    name: 'ModelTrainingInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ModelTrainingInfo
        fullName: ModelTrainingInfo
        uid: '@azure/cognitiveservices-luis-authoring.ModelTrainingInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    name: EnqueueTrainingResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EnqueueTrainingResponse
        fullName: EnqueueTrainingResponse
        uid: '@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse'
      - name: '>'
        fullName: '>'
