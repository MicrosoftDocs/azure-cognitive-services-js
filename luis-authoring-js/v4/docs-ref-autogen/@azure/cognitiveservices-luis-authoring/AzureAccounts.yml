### YamlMime:TSType
name: AzureAccounts
uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts'
package: '@azure/cognitiveservices-luis-authoring'
summary: Class representing a AzureAccounts.
fullName: AzureAccounts
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AzureAccounts(LUISAuthoringClientContext)
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.constructor'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: Create a AzureAccounts.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AzureAccounts(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      assignToApp(string, AzureAccountsAssignToAppOptionalParams,
      ServiceCallback<OperationStatus>)
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.assignToApp_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function assignToApp(appId: string, options:
        AzureAccountsAssignToAppOptionalParams, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountsAssignToAppOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'assignToApp(string, Models.AzureAccountsAssignToAppOptionalParams)'
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.assignToApp'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: Assigns an Azure account to the application.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function assignToApp(appId: string, options?:
        Models.AzureAccountsAssignToAppOptionalParams)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: <xref uid="Models.AzureAccountsAssignToAppOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AzureAccountsAssignToAppResponse" />&gt;
        description: Promise<Models.AzureAccountsAssignToAppResponse>
  - name: 'assignToApp(string, ServiceCallback<OperationStatus>)'
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.assignToApp_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function assignToApp(appId: string, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: >-
      getAssigned(string, AzureAccountsGetAssignedOptionalParams,
      ServiceCallback<AzureAccountInfoObject[]>)
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.getAssigned_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAssigned(appId: string, options:
        AzureAccountsGetAssignedOptionalParams, callback:
        ServiceCallback<AzureAccountInfoObject[]>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountsGetAssignedOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountInfoObject"
            />[]&gt;
          description: |
            The callback
  - name: 'getAssigned(string, Models.AzureAccountsGetAssignedOptionalParams)'
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.getAssigned'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Gets the LUIS Azure accounts assigned to the application for the user
      using his ARM token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAssigned(appId: string, options?:
        Models.AzureAccountsGetAssignedOptionalParams)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: <xref uid="Models.AzureAccountsGetAssignedOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AzureAccountsGetAssignedResponse" />&gt;
        description: Promise<Models.AzureAccountsGetAssignedResponse>
  - name: 'getAssigned(string, ServiceCallback<AzureAccountInfoObject[]>)'
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.getAssigned_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAssigned(appId: string, callback:
        ServiceCallback<AzureAccountInfoObject[]>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountInfoObject"
            />[]&gt;
          description: |
            The callback
  - name: >-
      listUserLUISAccounts(AzureAccountsListUserLUISAccountsOptionalParams,
      ServiceCallback<AzureAccountInfoObject[]>)
    uid: >-
      @azure/cognitiveservices-luis-authoring.AzureAccounts.listUserLUISAccounts_2
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUserLUISAccounts(options:
        AzureAccountsListUserLUISAccountsOptionalParams, callback:
        ServiceCallback<AzureAccountInfoObject[]>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountsListUserLUISAccountsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountInfoObject"
            />[]&gt;
          description: |
            The callback
  - name: >-
      listUserLUISAccounts(Models.AzureAccountsListUserLUISAccountsOptionalParams)
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.listUserLUISAccounts'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: Gets the LUIS Azure accounts for the user using his ARM token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUserLUISAccounts(options?:
        Models.AzureAccountsListUserLUISAccountsOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref uid="Models.AzureAccountsListUserLUISAccountsOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AzureAccountsListUserLUISAccountsResponse" />&gt;
        description: Promise<Models.AzureAccountsListUserLUISAccountsResponse>
  - name: 'listUserLUISAccounts(ServiceCallback<AzureAccountInfoObject[]>)'
    uid: >-
      @azure/cognitiveservices-luis-authoring.AzureAccounts.listUserLUISAccounts_1
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUserLUISAccounts(callback:
        ServiceCallback<AzureAccountInfoObject[]>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountInfoObject"
            />[]&gt;
          description: |
            The callback
  - name: >-
      removeFromApp(string, AzureAccountsRemoveFromAppOptionalParams,
      ServiceCallback<OperationStatus>)
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.removeFromApp_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeFromApp(appId: string, options:
        AzureAccountsRemoveFromAppOptionalParams, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.AzureAccountsRemoveFromAppOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
  - name: 'removeFromApp(string, Models.AzureAccountsRemoveFromAppOptionalParams)'
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.removeFromApp'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: Removes assigned Azure account from the application.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeFromApp(appId: string, options?:
        Models.AzureAccountsRemoveFromAppOptionalParams)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: options
          type: <xref uid="Models.AzureAccountsRemoveFromAppOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AzureAccountsRemoveFromAppResponse"
          />&gt;
        description: Promise<Models.AzureAccountsRemoveFromAppResponse>
  - name: 'removeFromApp(string, ServiceCallback<OperationStatus>)'
    uid: '@azure/cognitiveservices-luis-authoring.AzureAccounts.removeFromApp_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeFromApp(appId: string, callback:
        ServiceCallback<OperationStatus>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.OperationStatus" />&gt;
          description: |
            The callback
