### YamlMime:TSType
name: Train
uid: '@azure/cognitiveservices-luis-authoring.Train'
package: '@azure/cognitiveservices-luis-authoring'
summary: Class representing a Train.
fullName: Train
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Train(LUISAuthoringClientContext)
    uid: '@azure/cognitiveservices-luis-authoring.Train.constructor'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: Create a Train.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Train(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'getStatus(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Gets the training status of all models (intents and entities) for the
      specified LUIS app. You

      must call the train API to train the LUIS app before you call this API to
      get training status.

      "appID" specifies the LUIS app ID. "versionId" specifies the version
      number of the LUIS app. For

      example, "0.1".
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: versionId
          type: string
          description: The version ID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TrainGetStatusResponse" />&gt;
        description: Promise<Models.TrainGetStatusResponse>
  - name: >-
      getStatus(string, string, RequestOptionsBase,
      ServiceCallback<ModelTrainingInfo[]>)
    uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<ModelTrainingInfo[]>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: versionId
          type: string
          description: The version ID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.ModelTrainingInfo"
            />[]&gt;
          description: |
            The callback
  - name: 'getStatus(string, string, ServiceCallback<ModelTrainingInfo[]>)'
    uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStatus(appId: string, versionId: string, callback:
        ServiceCallback<ModelTrainingInfo[]>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: versionId
          type: string
          description: The version ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.ModelTrainingInfo"
            />[]&gt;
          description: |
            The callback
  - name: 'trainVersion(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: >-
      Sends a training request for a version of a specified LUIS app. This POST
      request initiates a

      request asynchronously. To determine whether the training request is
      successful, submit a GET

      request to get training status. Note: The application version is not fully
      trained unless all

      the models (intents and entities) are trained successfully or are up to
      date. To verify training

      success, get the training status at least once after training is complete.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: versionId
          type: string
          description: The version ID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TrainTrainVersionResponse" />&gt;
        description: Promise<Models.TrainTrainVersionResponse>
  - name: >-
      trainVersion(string, string, RequestOptionsBase,
      ServiceCallback<EnqueueTrainingResponse>)
    uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion_2'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<EnqueueTrainingResponse>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: versionId
          type: string
          description: The version ID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse"
            />&gt;
          description: |
            The callback
  - name: 'trainVersion(string, string, ServiceCallback<EnqueueTrainingResponse>)'
    uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion_1'
    package: '@azure/cognitiveservices-luis-authoring'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function trainVersion(appId: string, versionId: string, callback:
        ServiceCallback<EnqueueTrainingResponse>)
      parameters:
        - id: appId
          type: string
          description: The application ID.
        - id: versionId
          type: string
          description: The version ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse"
            />&gt;
          description: |
            The callback
