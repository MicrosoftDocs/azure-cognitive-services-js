### YamlMime:UniversalReference
items:
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams
    name: ComputerVisionClientReadInStreamOptionalParams
    fullName: ComputerVisionClientReadInStreamOptionalParams
    children:
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.abortSignal
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.customHeaders
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.language
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.onUploadProgress
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.language
    name: language
    fullName: language
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The BCP-47 language code of the text to be detected in the image. In
      future versions, when

      language parameter is not passed, language detection will be used to
      determine the language.

      However, in the current version, missing language parameter will cause
      English to be used. To

      ensure that your document is always parsed in English without the use of
      language detection in

      the future, pass “en” in the language parameter. Possible values include:
      'en', 'es', 'fr',

      'de', 'it', 'nl', 'pt'. Default value: 'en'.
    optional: true
    syntax:
      content: 'language?: OcrDetectionLanguage'
      return:
        type:
          - '@azure/cognitiveservices-computervision.OcrDetectionLanguage'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientReadInStreamOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-computervision'
references:
  - uid: '@azure/cognitiveservices-computervision.OcrDetectionLanguage'
    name: OcrDetectionLanguage
    spec.typeScript:
      - name: OcrDetectionLanguage
        fullName: OcrDetectionLanguage
        uid: '@azure/cognitiveservices-computervision.OcrDetectionLanguage'
