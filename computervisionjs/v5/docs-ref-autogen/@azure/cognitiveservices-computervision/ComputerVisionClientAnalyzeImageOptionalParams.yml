### YamlMime:UniversalReference
items:
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams
    name: ComputerVisionClientAnalyzeImageOptionalParams
    fullName: ComputerVisionClientAnalyzeImageOptionalParams
    children:
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.abortSignal
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.customHeaders
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.details
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.language
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.onUploadProgress
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.timeout
      - >-
        @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.visualFeatures
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.details
    name: details
    fullName: details
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string indicating which domain-specific details to return. Multiple
      values should be

      comma-separated. Valid visual feature types include: Celebrities -
      identifies celebrities if

      detected in the image, Landmarks - identifies notable landmarks in the
      image.
    optional: true
    syntax:
      content: 'details?: Details[]'
      return:
        type:
          - '@azure/cognitiveservices-computervision.Details[]'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.language
    name: language
    fullName: language
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The desired language for output generation. If this parameter is not
      specified, the default

      value is &quot;en&quot;.Supported languages:en - English, Default. es -
      Spanish, ja -

      Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values
      include: 'en', 'es', 'ja',

      'pt', 'zh'. Default value: 'en'.
    optional: true
    syntax:
      content: 'language?: Language'
      return:
        type:
          - '@azure/cognitiveservices-computervision.Language'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-computervision'
  - uid: >-
      @azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams.visualFeatures
    name: visualFeatures
    fullName: visualFeatures
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string indicating what visual feature types to return. Multiple values
      should be

      comma-separated. Valid visual feature types include: Categories -
      categorizes image content

      according to a taxonomy defined in documentation. Tags - tags the image
      with a detailed list

      of words related to the image content. Description - describes the image
      content with a

      complete English sentence. Faces - detects if faces are present. If
      present, generate

      coordinates, gender and age. ImageType - detects if image is clipart or a
      line drawing. Color

      - determines the accent color, dominant color, and whether an image is
      black&white. Adult -

      detects if the image is pornographic in nature (depicts nudity or a sex
      act).  Sexually

      suggestive content is also detected. Objects - detects various objects
      within an image,

      including the approximate location. The Objects argument is only available
      in English. Brands

      - detects various brands within an image, including the approximate
      location. The Brands

      argument is only available in English.
    optional: true
    syntax:
      content: 'visualFeatures?: VisualFeatureTypes[]'
      return:
        type:
          - '@azure/cognitiveservices-computervision.VisualFeatureTypes[]'
        description: ''
    package: '@azure/cognitiveservices-computervision'
references:
  - uid: '@azure/cognitiveservices-computervision.Details[]'
    name: 'Details[]'
    spec.typeScript:
      - name: Details
        fullName: Details
        uid: '@azure/cognitiveservices-computervision.Details'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-computervision.Language'
    name: Language
    spec.typeScript:
      - name: Language
        fullName: Language
        uid: '@azure/cognitiveservices-computervision.Language'
  - uid: '@azure/cognitiveservices-computervision.VisualFeatureTypes[]'
    name: 'VisualFeatureTypes[]'
    spec.typeScript:
      - name: VisualFeatureTypes
        fullName: VisualFeatureTypes
        uid: '@azure/cognitiveservices-computervision.VisualFeatureTypes'
      - name: '[]'
        fullName: '[]'
