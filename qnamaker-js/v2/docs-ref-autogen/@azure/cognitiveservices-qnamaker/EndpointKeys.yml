### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys'
    name: EndpointKeys
    fullName: EndpointKeys
    children:
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.constructor'
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.getKeys'
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.getKeys_2'
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.getKeys_1'
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.refreshKeys'
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.refreshKeys_2'
      - '@azure/cognitiveservices-qnamaker.EndpointKeys.refreshKeys_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a EndpointKeys.
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.constructor'
    name: EndpointKeys(QnAMakerClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a EndpointKeys.
    syntax:
      content: 'new EndpointKeys(client: QnAMakerClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.getKeys'
    name: getKeys(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeys(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EndpointKeysGetKeysResponse>
        description: Promise<Models.EndpointKeysGetKeysResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.getKeys_2'
    name: 'getKeys(RequestOptionsBase, ServiceCallback<EndpointKeysDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeys(options: RequestOptionsBase, callback:
        ServiceCallback<EndpointKeysDTO>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.EndpointKeysDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.getKeys_1'
    name: getKeys(ServiceCallback<EndpointKeysDTO>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeys(callback: ServiceCallback<EndpointKeysDTO>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.EndpointKeysDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.refreshKeys'
    name: 'refreshKeys(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshKeys(keyType: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: keyType
          type:
            - string
          description: Type of Key
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EndpointKeysRefreshKeysResponse>
        description: Promise<Models.EndpointKeysRefreshKeysResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.refreshKeys_2'
    name: 'refreshKeys(string, RequestOptionsBase, ServiceCallback<EndpointKeysDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshKeys(keyType: string, options: RequestOptionsBase,
        callback: ServiceCallback<EndpointKeysDTO>)
      parameters:
        - id: keyType
          type:
            - string
          description: Type of Key
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.EndpointKeysDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.EndpointKeys.refreshKeys_1'
    name: 'refreshKeys(string, ServiceCallback<EndpointKeysDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function refreshKeys(keyType: string, callback:
        ServiceCallback<EndpointKeysDTO>)
      parameters:
        - id: keyType
          type:
            - string
          description: Type of Key
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.EndpointKeysDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
references:
  - uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
    name: QnAMakerClientContext
    spec.typeScript:
      - name: QnAMakerClientContext
        fullName: QnAMakerClientContext
        uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-qnamaker.EndpointKeysDTO>
    name: EndpointKeysDTO>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EndpointKeysDTO
        fullName: EndpointKeysDTO
        uid: '@azure/cognitiveservices-qnamaker.EndpointKeysDTO'
      - name: '>'
        fullName: '>'
