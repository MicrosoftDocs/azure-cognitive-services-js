### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-qnamaker.Operations'
    name: Operations
    fullName: Operations
    children:
      - '@azure/cognitiveservices-qnamaker.Operations.getDetails'
      - '@azure/cognitiveservices-qnamaker.Operations.getDetails_2'
      - '@azure/cognitiveservices-qnamaker.Operations.getDetails_1'
      - '@azure/cognitiveservices-qnamaker.Operations.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Operations.
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Operations.getDetails'
    name: 'getDetails(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(operationId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: operationId
          type:
            - string
          description: Operation id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.OperationsGetDetailsResponse>
        description: Promise<Models.OperationsGetDetailsResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Operations.getDetails_2'
    name: 'getDetails(string, RequestOptionsBase, ServiceCallback<Operation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(operationId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Operation>)
      parameters:
        - id: operationId
          type:
            - string
          description: Operation id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Operations.getDetails_1'
    name: 'getDetails(string, ServiceCallback<Operation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(operationId: string, callback:
        ServiceCallback<Operation>)
      parameters:
        - id: operationId
          type:
            - string
          description: Operation id.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Operations.constructor'
    name: Operations(QnAMakerClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Operations.
    syntax:
      content: 'new Operations(client: QnAMakerClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-qnamaker'
references:
  - uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
    name: QnAMakerClientContext
    spec.typeScript:
      - name: QnAMakerClientContext
        fullName: QnAMakerClientContext
        uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
    name: Operation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Operation
        fullName: Operation
        uid: '@azure/cognitiveservices-qnamaker.Operation'
      - name: '>'
        fullName: '>'
