### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase'
    name: Knowledgebase
    fullName: Knowledgebase
    children:
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.create'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.create_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.create_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.download'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.download_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.download_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.constructor'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.publish'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.publish_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.publish_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.replace'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.replace_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.replace_1'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.update'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.update_2'
      - '@azure/cognitiveservices-qnamaker.Knowledgebase.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Knowledgebase.
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.create'
    name: 'create(CreateKbDTO, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(createKbPayload: CreateKbDTO, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: createKbPayload
          type:
            - '@azure/cognitiveservices-qnamaker.CreateKbDTO'
          description: Post body of the request.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.KnowledgebaseCreateResponse>
        description: Promise<Models.KnowledgebaseCreateResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.create_2'
    name: 'create(CreateKbDTO, RequestOptionsBase, ServiceCallback<Operation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(createKbPayload: CreateKbDTO, options:
        RequestOptionsBase, callback: ServiceCallback<Operation>)
      parameters:
        - id: createKbPayload
          type:
            - '@azure/cognitiveservices-qnamaker.CreateKbDTO'
          description: Post body of the request.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.create_1'
    name: 'create(CreateKbDTO, ServiceCallback<Operation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(createKbPayload: CreateKbDTO, callback:
        ServiceCallback<Operation>)
      parameters:
        - id: createKbPayload
          type:
            - '@azure/cognitiveservices-qnamaker.CreateKbDTO'
          description: Post body of the request.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(kbId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(kbId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(kbId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.download'
    name: 'download(string, Models.EnvironmentType, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function download(kbId: string, environment: Models.EnvironmentType,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: environment
          type:
            - Models.EnvironmentType
          description: >-
            Specifies whether environment is Test or Prod. Possible values
            include:

            'Prod', 'Test'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.KnowledgebaseDownloadResponse>
        description: Promise<Models.KnowledgebaseDownloadResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.download_2'
    name: >-
      download(string, Models.EnvironmentType, RequestOptionsBase,
      ServiceCallback<QnADocumentsDTO>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function download(kbId: string, environment: Models.EnvironmentType,
        options: RequestOptionsBase, callback: ServiceCallback<QnADocumentsDTO>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: environment
          type:
            - Models.EnvironmentType
          description: >-
            Specifies whether environment is Test or Prod. Possible values
            include:

            'Prod', 'Test'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.QnADocumentsDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.download_1'
    name: 'download(string, Models.EnvironmentType, ServiceCallback<QnADocumentsDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function download(kbId: string, environment: Models.EnvironmentType,
        callback: ServiceCallback<QnADocumentsDTO>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: environment
          type:
            - Models.EnvironmentType
          description: >-
            Specifies whether environment is Test or Prod. Possible values
            include:

            'Prod', 'Test'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.QnADocumentsDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails'
    name: 'getDetails(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDetails(kbId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.KnowledgebaseGetDetailsResponse>
        description: Promise<Models.KnowledgebaseGetDetailsResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails_2'
    name: 'getDetails(string, RequestOptionsBase, ServiceCallback<KnowledgebaseDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(kbId: string, options: RequestOptionsBase, callback:
        ServiceCallback<KnowledgebaseDTO>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-qnamaker.KnowledgebaseDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.getDetails_1'
    name: 'getDetails(string, ServiceCallback<KnowledgebaseDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDetails(kbId: string, callback:
        ServiceCallback<KnowledgebaseDTO>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-qnamaker.KnowledgebaseDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.constructor'
    name: Knowledgebase(QnAMakerClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Knowledgebase.
    syntax:
      content: 'new Knowledgebase(client: QnAMakerClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll'
    name: listAll(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.KnowledgebaseListAllResponse>
        description: Promise<Models.KnowledgebaseListAllResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll_2'
    name: 'listAll(RequestOptionsBase, ServiceCallback<KnowledgebasesDTO>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<KnowledgebasesDTO>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-qnamaker.KnowledgebasesDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.listAll_1'
    name: listAll(ServiceCallback<KnowledgebasesDTO>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAll(callback: ServiceCallback<KnowledgebasesDTO>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-qnamaker.KnowledgebasesDTO>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.publish'
    name: 'publish(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publish(kbId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.publish_2'
    name: 'publish(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function publish(kbId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.publish_1'
    name: 'publish(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publish(kbId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.replace'
    name: 'replace(string, ReplaceKbDTO, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replace(kbId: string, replaceKb: ReplaceKbDTO, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: replaceKb
          type:
            - '@azure/cognitiveservices-qnamaker.ReplaceKbDTO'
          description: >-
            An instance of ReplaceKbDTO which contains list of qnas to be
            uploaded
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.replace_2'
    name: 'replace(string, ReplaceKbDTO, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replace(kbId: string, replaceKb: ReplaceKbDTO, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: replaceKb
          type:
            - '@azure/cognitiveservices-qnamaker.ReplaceKbDTO'
          description: >-
            An instance of ReplaceKbDTO which contains list of qnas to be
            uploaded
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.replace_1'
    name: 'replace(string, ReplaceKbDTO, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replace(kbId: string, replaceKb: ReplaceKbDTO, callback:
        ServiceCallback<void>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: replaceKb
          type:
            - '@azure/cognitiveservices-qnamaker.ReplaceKbDTO'
          description: >-
            An instance of ReplaceKbDTO which contains list of qnas to be
            uploaded
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.update'
    name: 'update(string, UpdateKbOperationDTO, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(kbId: string, updateKb: UpdateKbOperationDTO, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: updateKb
          type:
            - '@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO'
          description: Post body of the request.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.KnowledgebaseUpdateResponse>
        description: Promise<Models.KnowledgebaseUpdateResponse>
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.update_2'
    name: >-
      update(string, UpdateKbOperationDTO, RequestOptionsBase,
      ServiceCallback<Operation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(kbId: string, updateKb: UpdateKbOperationDTO, options:
        RequestOptionsBase, callback: ServiceCallback<Operation>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: updateKb
          type:
            - '@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO'
          description: Post body of the request.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
  - uid: '@azure/cognitiveservices-qnamaker.Knowledgebase.update_1'
    name: 'update(string, UpdateKbOperationDTO, ServiceCallback<Operation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(kbId: string, updateKb: UpdateKbOperationDTO, callback:
        ServiceCallback<Operation>)
      parameters:
        - id: kbId
          type:
            - string
          description: Knowledgebase id.
        - id: updateKb
          type:
            - '@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO'
          description: Post body of the request.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
          description: |
            The callback
    package: '@azure/cognitiveservices-qnamaker'
references:
  - uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
    name: QnAMakerClientContext
    spec.typeScript:
      - name: QnAMakerClientContext
        fullName: QnAMakerClientContext
        uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
  - uid: '@azure/cognitiveservices-qnamaker.CreateKbDTO'
    name: CreateKbDTO
    spec.typeScript:
      - name: CreateKbDTO
        fullName: CreateKbDTO
        uid: '@azure/cognitiveservices-qnamaker.CreateKbDTO'
  - uid: ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
    name: Operation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Operation
        fullName: Operation
        uid: '@azure/cognitiveservices-qnamaker.Operation'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-qnamaker.QnADocumentsDTO>
    name: QnADocumentsDTO>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: QnADocumentsDTO
        fullName: QnADocumentsDTO
        uid: '@azure/cognitiveservices-qnamaker.QnADocumentsDTO'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-qnamaker.KnowledgebaseDTO>
    name: KnowledgebaseDTO>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KnowledgebaseDTO
        fullName: KnowledgebaseDTO
        uid: '@azure/cognitiveservices-qnamaker.KnowledgebaseDTO'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-qnamaker.KnowledgebasesDTO>
    name: KnowledgebasesDTO>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KnowledgebasesDTO
        fullName: KnowledgebasesDTO
        uid: '@azure/cognitiveservices-qnamaker.KnowledgebasesDTO'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-qnamaker.ReplaceKbDTO'
    name: ReplaceKbDTO
    spec.typeScript:
      - name: ReplaceKbDTO
        fullName: ReplaceKbDTO
        uid: '@azure/cognitiveservices-qnamaker.ReplaceKbDTO'
  - uid: '@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO'
    name: UpdateKbOperationDTO
    spec.typeScript:
      - name: UpdateKbOperationDTO
        fullName: UpdateKbOperationDTO
        uid: '@azure/cognitiveservices-qnamaker.UpdateKbOperationDTO'
