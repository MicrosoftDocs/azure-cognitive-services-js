### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer
    name: SpeechRecognizer
    fullName: SpeechRecognizer
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.canceled
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.close
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.dispose
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.enableTelemetry
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.endpointId
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.internalData
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.outputFormat
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.properties
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognized
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognizeOnceAsync
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognizing
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.sessionStarted
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.sessionStopped
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechEndDetected
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechRecognitionLanguage
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechStartDetected
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startContinuousRecognitionAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startContinuousRecognitionAsyncImpl
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startKeywordRecognitionAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.stopContinuousRecognitionAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.stopKeywordRecognitionAsync
      - microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.telemetryEnabled
    langs:
      - typeScript
    type: class
    summary: >-
      Performs speech recognition from microphone, file, or other audio input
      streams, and gets transcribed text as result.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.Recognizer
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the authorization token used to communicate with the service.
      Gets/Sets the authorization token used to communicate with the service.
    syntax:
      content: string authorizationToken
      return:
        type:
          - string
        description: Authorization token.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: The event canceled signals that an error occurred during recognition.
    syntax:
      content: >-
        public canceled: (sender: Recognizer, event:
        SpeechRecognitionCanceledEventArgs) => void
      return:
        type:
          - >-
            (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) =>
            void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: closes all external resources held by an instance of this class.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.dispose
    name: dispose(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: Disposes any resources held by the object.
    syntax:
      content: 'function dispose(disposing: boolean)'
      parameters:
        - id: disposing
          type:
            - boolean
          description: |
            true if disposing the object.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.enableTelemetry
    name: enableTelemetry(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: This method globally enables or disables telemetry.
    syntax:
      content: 'static function enableTelemetry(enabled: boolean)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: |
            Global setting for telemetry collection.
            If set to true, telemetry information like microphone errors,
            recognition errors are collected and sent to Microsoft.
            If set to false, no telemetry is sent to Microsoft.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.endpointId
    name: endpointId
    fullName: endpointId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets the endpoint id of a customized speech model that is used for speech
      recognition.
    syntax:
      content: string endpointId
      return:
        type:
          - string
        description: >-
          the endpoint id of a customized speech model that is used for speech
          recognition.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.internalData
    name: internalData
    fullName: internalData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: object internalData
      return:
        type:
          - object
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.outputFormat
    name: outputFormat
    fullName: outputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the output format of recognition.
    syntax:
      content: OutputFormat outputFormat
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.OutputFormat
        description: The output format of recognition.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The collection of properties and their values defined for this
      SpeechRecognizer.
    syntax:
      content: PropertyCollection properties
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: >-
          The collection of properties and their values defined for this
          SpeechRecognizer.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognized
    name: recognized
    fullName: recognized
    children: []
    langs:
      - typeScript
    type: property
    summary: The event recognized signals that a final recognition result is received.
    syntax:
      content: >-
        public recognized: (sender: Recognizer, event:
        SpeechRecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: SpeechRecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognizeOnceAsync
    name: >-
      recognizeOnceAsync((e: SpeechRecognitionResult) => void, (e: string) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts speech recognition, and stops after the first utterance is
      recognized.

      The task returns the recognition text as result.

      Note: RecognizeOnceAsync() returns when the first utterance has been
      recognized,
            so it is suitable only for single shot recognition
            like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.
    syntax:
      content: >-
        function recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void,
        err?: (e: string) => void)
      parameters:
        - id: cb
          type:
            - '(e: SpeechRecognitionResult) => void'
          description: Callback that received the SpeechRecognitionResult.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognizing
    name: recognizing
    fullName: recognizing
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The event recognizing signals that an intermediate recognition result is
      received.
    syntax:
      content: >-
        public recognizing: (sender: Recognizer, event:
        SpeechRecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: SpeechRecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.sessionStarted
    name: sessionStarted
    fullName: sessionStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session started events.
    syntax:
      content: >-
        public sessionStarted: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.sessionStopped
    name: sessionStopped
    fullName: sessionStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session stopped events.
    syntax:
      content: >-
        public sessionStopped: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechEndDetected
    name: speechEndDetected
    fullName: speechEndDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for speech stopped events.
    syntax:
      content: >-
        public speechEndDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the spoken language of recognition.
    syntax:
      content: string speechRecognitionLanguage
      return:
        type:
          - string
        description: The spoken language of recognition.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.constructor
    name: 'SpeechRecognizer(SpeechConfig, AudioConfig)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: SpeechRecognizer constructor.
    syntax:
      content: >-
        new SpeechRecognizer(speechConfig: SpeechConfig, audioConfig?:
        AudioConfig)
      parameters:
        - id: speechConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeechConfig
          description: An set of initial properties for this recognizer
        - id: audioConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.AudioConfig
          description: |
            An optional audio configuration associated with the recognizer
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechStartDetected
    name: speechStartDetected
    fullName: speechStartDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for speech started events.
    syntax:
      content: >-
        public speechStartDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startContinuousRecognitionAsync
    name: 'startContinuousRecognitionAsync(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts speech recognition, until stopContinuousRecognitionAsync() is
      called.

      User must subscribe to events to receive recognition results.
    syntax:
      content: >-
        function startContinuousRecognitionAsync(cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has started.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startContinuousRecognitionAsyncImpl
    name: >-
      startContinuousRecognitionAsyncImpl(RecognitionMode, () => void, (e:
      string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousRecognitionAsyncImpl(recognitionMode:
        RecognitionMode, cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: recognitionMode
          type:
            - microsoft-cognitiveservices-speech-sdk.RecognitionMode
          description: ''
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startKeywordRecognitionAsync
    name: >-
      startKeywordRecognitionAsync(KeywordRecognitionModel, () => void, (e:
      string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Starts speech recognition with keyword spotting, until
      stopKeywordRecognitionAsync() is called.
      User must subscribe to events to receive recognition results.
      Note: Key word spotting functionality is only available on the
           Speech Devices SDK. This functionality is currently not included in the SDK itself.
    syntax:
      content: >-
        function startKeywordRecognitionAsync(model: KeywordRecognitionModel,
        cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
          description: |-
            The keyword recognition model that
                   specifies the keyword to be recognized.
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has started.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.stopContinuousRecognitionAsync
    name: 'stopContinuousRecognitionAsync(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops continuous speech recognition.
    syntax:
      content: >-
        function stopContinuousRecognitionAsync(cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has stopped.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.stopKeywordRecognitionAsync
    name: 'stopKeywordRecognitionAsync(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Stops continuous speech recognition.
      Note: Key word spotting functionality is only available on the
            Speech Devices SDK. This functionality is currently not included in the SDK itself.
    syntax:
      content: >-
        function stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string)
        => void)
      parameters:
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has stopped.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.telemetryEnabled
    name: telemetryEnabled
    fullName: telemetryEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: This method returns the current state of the telemetry setting.
    syntax:
      content: static boolean telemetryEnabled
      return:
        type:
          - boolean
        description: 'true if the telemetry is enabled, false otherwise.'
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer
    name: Recognizer
    spec.typeScript:
      - name: Recognizer
        fullName: Recognizer
        uid: microsoft-cognitiveservices-speech-sdk.Recognizer
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
    name: AudioConfig
    spec.typeScript:
      - name: AudioConfig
        fullName: AudioConfig
        uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
  - uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
    name: OutputFormat
    spec.typeScript:
      - name: OutputFormat
        fullName: OutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
    name: RecognitionMode
    spec.typeScript:
      - name: RecognitionMode
        fullName: RecognitionMode
        uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
  - uid: microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
    name: KeywordRecognitionModel
    spec.typeScript:
      - name: KeywordRecognitionModel
        fullName: KeywordRecognitionModel
        uid: microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
