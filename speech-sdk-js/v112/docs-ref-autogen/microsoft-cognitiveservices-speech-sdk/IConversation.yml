### YamlMime:TSType
name: IConversation
uid: microsoft-cognitiveservices-speech-sdk.IConversation
package: microsoft-cognitiveservices-speech-sdk
summary: |-
  Manages conversations.
  Added in version 1.4.0
fullName: IConversation
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: authorizationToken
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.authorizationToken
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Gets/sets authorization token used to communicate with the service.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token

      expires, the caller needs to refresh it by calling this setter with a new
      valid token.

      Otherwise, the recognizer will encounter errors during recognition.
    fullName: authorizationToken
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'authorizationToken: string'
      return:
        type: string
        description: ''
  - name: config
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.config
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: config
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'config: SpeechTranslationConfig'
      return:
        type: >-
          <xref
          uid="microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig"
          />
        description: ''
  - name: conversationId
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.conversationId
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the unique identifier for the current conversation.
    fullName: conversationId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'conversationId: string'
      return:
        type: string
        description: ''
  - name: properties
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.properties
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Gets the collection of properties and their values defined for this
      instance.
    fullName: properties
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'properties: PropertyCollection'
      return:
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.PropertyCollection"
          />
        description: ''
  - name: speechRecognitionLanguage
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.speechRecognitionLanguage
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the language name that is used for recognition.
    fullName: speechRecognitionLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'speechRecognitionLanguage: string'
      return:
        type: string
        description: ''
methods:
  - name: 'deleteConversationAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.deleteConversationAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Delete a conversation. After this no one will be able to join the
      conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteConversationAsync(cb?: () => void, err?: (e: string) =>
        void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: 'endConversationAsync(() => void, (e: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.endConversationAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: End a conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endConversationAsync(cb?: () => void, err?: (e: string) =>
        void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: 'lockConversationAsync(() => void, (e: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.lockConversationAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Lock a conversation. This will prevent new participants from joining.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function lockConversationAsync(cb?: () => void, err?: (e: string) =>
        void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: 'muteAllParticipantsAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.muteAllParticipantsAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Mute all other participants in the conversation. After this no other
      participants will

      have their speech recognitions broadcast, nor be able to send text
      messages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function muteAllParticipantsAsync(cb?: () => void, err?: (e: string) =>
        void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: 'muteParticipantAsync(string, () => void, (e: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.IConversation.muteParticipantAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Mute a participant.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function muteParticipantAsync(userId: string, cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: userId
          type: string
          description: |
            A user identifier
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: >-
      removeParticipantAsync(string | IParticipant | IUser, () => void, (e:
      string) => void)
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.removeParticipantAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Remove a participant from a conversation using the user id, Participant or
      User object
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeParticipantAsync(userId: string | IParticipant | IUser,
        cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: userId
          type: >-
            string | <xref
            uid="microsoft-cognitiveservices-speech-sdk.IParticipant" /> | <xref
            uid="microsoft-cognitiveservices-speech-sdk.IUser" />
          description: |
            A user identifier
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: 'startConversationAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.startConversationAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Start a conversation.
       The host must connect to the websocket within a minute for the conversation to remain open.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startConversationAsync(cb?: () => void, err?: (e: string) =>
        void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: unlockConversationAsync()
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.unlockConversationAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Unlocks a conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function unlockConversationAsync()
  - name: 'unmuteAllParticipantsAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.unmuteAllParticipantsAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Unmute all other participants in the conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unmuteAllParticipantsAsync(cb?: () => void, err?: (e: string)
        => void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: 'unmuteParticipantAsync(string, () => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversation.unmuteParticipantAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Unmute a participant.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unmuteParticipantAsync(userId: string, cb?: () => void, err?:
        (e: string) => void)
      parameters:
        - id: userId
          type: string
          description: |
            A user identifier
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
