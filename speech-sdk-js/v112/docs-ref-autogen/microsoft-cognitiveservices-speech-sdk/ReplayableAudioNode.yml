### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode
    name: ReplayableAudioNode
    fullName: ReplayableAudioNode
    children:
      - microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.detach
      - >-
        microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.findTimeAtOffset
      - microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.id
      - microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.read
      - microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.replay
      - microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.constructor
      - microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.shrinkBuffers
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.detach
    name: detach()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function detach()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.findTimeAtOffset
    name: findTimeAtOffset(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findTimeAtOffset(offset: number)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
      return:
        type:
          - number
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: () => string'
      return:
        type:
          - () => string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.read
    name: read()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function read()
      parameters: []
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IStreamChunk<ArrayBuffer>>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.replay
    name: replay()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function replay()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.constructor
    name: 'ReplayableAudioNode(IAudioStreamNode, number)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new ReplayableAudioNode(audioSource: IAudioStreamNode, bytesPerSecond:
        number)
      parameters:
        - id: audioSource
          type:
            - microsoft-cognitiveservices-speech-sdk.IAudioStreamNode
          description: ''
        - id: bytesPerSecond
          type:
            - number
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ReplayableAudioNode.shrinkBuffers
    name: shrinkBuffers(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function shrinkBuffers(offset: number)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.IAudioStreamNode
    name: IAudioStreamNode
    spec.typeScript:
      - name: IAudioStreamNode
        fullName: IAudioStreamNode
        uid: microsoft-cognitiveservices-speech-sdk.IAudioStreamNode
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IStreamChunk<ArrayBuffer>>
    name: IStreamChunk<ArrayBuffer>>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <
        fullName: <
      - name: IStreamChunk
        fullName: IStreamChunk
        uid: microsoft-cognitiveservices-speech-sdk.IStreamChunk
      - name: <ArrayBuffer>>
        fullName: <ArrayBuffer>>
