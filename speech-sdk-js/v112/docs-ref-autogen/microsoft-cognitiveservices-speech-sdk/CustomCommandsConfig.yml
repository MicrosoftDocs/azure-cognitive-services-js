### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig
    name: CustomCommandsConfig
    fullName: CustomCommandsConfig
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.applicationId
      - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.close
      - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.fromAuthorizationToken
      - >-
        microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.fromSubscription
      - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.getProperty
      - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.properties
      - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.setProperty
      - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.setProxy
      - >-
        microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.setServiceProperty
      - >-
        microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.speechRecognitionLanguage
    langs:
      - typeScript
    type: class
    summary: >-
      Class that defines configurations for the dialog service connector object
      for using a CustomCommands backend.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.DialogServiceConfigImpl
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.applicationId
    name: applicationId
    fullName: applicationId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Sets the corresponding backend application identifier.
      Gets the corresponding backend application identifier.
    syntax:
      content: string applicationId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Dispose of associated resources.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.constructor
    name: CustomCommandsConfig()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of CustomCommandsConfig.
    syntax:
      content: new CustomCommandsConfig()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.fromAuthorizationToken
    name: 'fromAuthorizationToken(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of the bot framework config with the specified Speech
      Commands application id, authorization token and region.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token

      expires, the caller needs to refresh it by calling this setter with a new
      valid token.

      As configuration values are copied when creating a new recognizer, the new
      token value will not apply to recognizers that have already been created.

      For recognizers that have been created before, you need to set
      authorization token of the corresponding recognizer

      to refresh the token. Otherwise, the recognizers will encounter errors
      during recognition.
    syntax:
      content: >-
        static function fromAuthorizationToken(applicationId: string,
        authorizationToken: string, region: string)
      parameters:
        - id: applicationId
          type:
            - string
          description: Speech Commands application id.
        - id: authorizationToken
          type:
            - string
          description: The authorization token associated with the application.
        - id: region
          type:
            - string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig
        description: A new speech commands config.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.fromSubscription
    name: 'fromSubscription(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of the bot framework config with the specified
      subscription and region.
    syntax:
      content: >-
        static function fromSubscription(applicationId: string, subscription:
        string, region: string)
      parameters:
        - id: applicationId
          type:
            - string
          description: Speech Commands application id.
        - id: subscription
          type:
            - string
          description: Subscription key associated with the bot
        - id: region
          type:
            - string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig
        description: A new bot framework config.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.getProperty
    name: 'getProperty(string | PropertyId, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets a named property as value
    syntax:
      content: 'function getProperty(name: string | PropertyId, def?: string)'
      parameters:
        - id: name
          type:
            - string | microsoft-cognitiveservices-speech-sdk.PropertyId
          description: The property to get.
        - id: def
          type:
            - string
          description: The default value to return in case the property is not known.
          optional: true
      return:
        type:
          - string
        description: 'The current value, or provided default, of the given property.'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: Provides access to custom properties.
    syntax:
      content: PropertyCollection properties
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: The properties.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.setProperty
    name: 'setProperty(string | PropertyId, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets a named property as value
    syntax:
      content: 'function setProperty(name: string | PropertyId, value: string)'
      parameters:
        - id: name
          type:
            - string | microsoft-cognitiveservices-speech-sdk.PropertyId
          description: The property to set.
        - id: value
          type:
            - string
          description: |
            The value.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.setProxy
    name: 'setProxy(string, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sets the proxy configuration.
      Only relevant in Node.js environments.
      Added in version 1.4.0.
    syntax:
      content: >-
        function setProxy(proxyHostName: string, proxyPort: number,
        proxyUserName?: string, proxyPassword?: string)
      parameters:
        - id: proxyHostName
          type:
            - string
          description: >-
            The host name of the proxy server, without the protocol scheme
            (http://)
        - id: proxyPort
          type:
            - number
          description: The port number of the proxy server.
        - id: proxyUserName
          type:
            - string
          description: The user name of the proxy server.
          optional: true
        - id: proxyPassword
          type:
            - string
          description: |
            The password of the proxy server.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.setServiceProperty
    name: 'setServiceProperty(string, string, ServicePropertyChannel)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setServiceProperty(name: string, value: string, channel:
        ServicePropertyChannel)
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: channel
          type:
            - microsoft-cognitiveservices-speech-sdk.ServicePropertyChannel
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the speech recognition language.
      Sets the speech recognition language.
    syntax:
      content: string speechRecognitionLanguage
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConfigImpl
    name: DialogServiceConfigImpl
    spec.typeScript:
      - name: DialogServiceConfigImpl
        fullName: DialogServiceConfigImpl
        uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConfigImpl
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: string | microsoft-cognitiveservices-speech-sdk.PropertyId
    name: PropertyId
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: PropertyId
        fullName: PropertyId
        uid: microsoft-cognitiveservices-speech-sdk.PropertyId
  - uid: microsoft-cognitiveservices-speech-sdk.ServicePropertyChannel
    name: ServicePropertyChannel
    spec.typeScript:
      - name: ServicePropertyChannel
        fullName: ServicePropertyChannel
        uid: microsoft-cognitiveservices-speech-sdk.ServicePropertyChannel
  - uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig
    name: CustomCommandsConfig
    spec.typeScript:
      - name: CustomCommandsConfig
        fullName: CustomCommandsConfig
        uid: microsoft-cognitiveservices-speech-sdk.CustomCommandsConfig
