### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination
    name: SpeakerAudioDestination
    fullName: SpeakerAudioDestination
    children:
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.close
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.currentTime
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.format
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.id
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.internalAudio
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.isClosed
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.onAudioEnd
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.pause
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.resume
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.constructor
      - microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.write
    langs:
      - typeScript
    type: class
    summary: >-
      Represents the speaker playback audio destination, which only works in
      browser.

      Note: the SDK will try to use <a
      href="https://www.w3.org/TR/media-source/">Media Source Extensions</a> to
      play audio.

      Mp3 format has better supports on Microsoft Edge, Chrome and Safari
      (desktop), so, it's better to specify mp3 format for playback.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.currentTime
    name: currentTime
    fullName: currentTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number currentTime
      return:
        type:
          - number
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.format
    name: format
    fullName: format
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: any format
      return:
        type:
          - any
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.id
    name: id()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function id()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.internalAudio
    name: internalAudio
    fullName: internalAudio
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HTMLAudioElement internalAudio
      return:
        type:
          - HTMLAudioElement
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.isClosed
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isClosed
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.onAudioEnd
    name: onAudioEnd
    fullName: onAudioEnd
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onAudioEnd: (sender: IPlayer) => void'
      return:
        type:
          - '(sender: IPlayer) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.pause
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.resume
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.constructor
    name: SpeakerAudioDestination(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SpeakerAudioDestination(audioDestinationId?: string)'
      parameters:
        - id: audioDestinationId
          type:
            - string
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerAudioDestination.write
    name: write(ArrayBuffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(buffer: ArrayBuffer)'
      parameters:
        - id: buffer
          type:
            - ArrayBuffer
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
