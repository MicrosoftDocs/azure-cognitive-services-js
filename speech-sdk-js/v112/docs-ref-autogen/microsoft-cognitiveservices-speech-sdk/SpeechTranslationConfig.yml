### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    fullName: SpeechTranslationConfig
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.addTargetLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.close
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.enableAudioLogging
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.enableDictation
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.endpointId
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromAuthorizationToken
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromEndpoint
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromHost
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromSubscription
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.getProperty
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.outputFormat
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.region
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.requestWordLevelTimestamps
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProfanity
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy_1
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setServiceProperty
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechRecognitionLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechSynthesisLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechSynthesisOutputFormat
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechSynthesisVoiceName
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.subscriptionKey
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.targetLanguages
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.voiceName
    langs:
      - typeScript
    type: class
    summary: Speech translation configuration.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.addTargetLanguage
    name: addTargetLanguage(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a (text) target language to translate into.
    syntax:
      content: 'function addTargetLanguage(value: string)'
      parameters:
        - id: value
          type:
            - string
          description: |
            The language such as de-DE
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets/Sets the authorization token.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token

      expires, the caller needs to refresh it by calling this setter with a new
      valid token.
    syntax:
      content: any authorizationToken
      return:
        type:
          - any
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Dispose of associated resources.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.enableAudioLogging
    name: enableAudioLogging()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function enableAudioLogging()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.enableDictation
    name: enableDictation()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function enableDictation()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.endpointId
    name: endpointId
    fullName: endpointId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets the endpoint ID of a customized speech model that is used for speech
      recognition.

      Gets/Sets the endpoint ID of a customized speech model that is used for
      speech recognition.
    syntax:
      content: string endpointId
      return:
        type:
          - string
        description: The endpoint ID
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromAuthorizationToken
    name: 'fromAuthorizationToken(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Static instance of SpeechTranslationConfig returned by passing
      authorization token and service region.

      Note: The caller needs to ensure that the authorization token is valid.
      Before the authorization token
            expires, the caller needs to refresh it by setting the property authorizationToken with a new
            valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance
            will encounter errors during recognition.
      As configuration values are copied when creating a new recognizer, the new
      token value will not apply

      to recognizers that have already been created.

      For recognizers that have been created before, you need to set
      authorization token of the corresponding recognizer

      to refresh the token. Otherwise, the recognizers will encounter errors
      during recognition.
    syntax:
      content: >-
        static function fromAuthorizationToken(authorizationToken: string,
        region: string)
      parameters:
        - id: authorizationToken
          type:
            - string
          description: The authorization token.
        - id: region
          type:
            - string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
        description: The speech translation config.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromEndpoint
    name: 'fromEndpoint(URL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of the speech translation config with specified
      endpoint and subscription key.

      This method is intended only for users who use a non-standard service
      endpoint or paramters.

      Note: The query properties specified in the endpoint URL are not changed,
      even if they are
            set by any other APIs. For example, if language is defined in the uri as query parameter
            "language=de-DE", and also set by the speechRecognitionLanguage property, the language
            setting in uri takes precedence, and the effective language is "de-DE".
      Only the properties that are not specified in the endpoint URL can be set
      by other APIs.

      Note: To use authorization token with fromEndpoint, pass an empty string
      to the subscriptionKey in the
            fromEndpoint method, and then set authorizationToken="token" on the created SpeechConfig instance to
            use the authorization token.
    syntax:
      content: 'static function fromEndpoint(endpoint: URL, subscriptionKey: string)'
      parameters:
        - id: endpoint
          type:
            - URL
          description: The service endpoint to connect to.
        - id: subscriptionKey
          type:
            - string
          description: The subscription key.
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
        description: A speech config instance.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromHost
    name: 'fromHost(URL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an instance of the speech config with specified host and
      subscription key.

      This method is intended only for users who use a non-default service host.
      Standard resource path will be assumed.

      For services with a non-standard resource path or no path at all, use
      fromEndpoint instead.

      Note: Query parameters are not allowed in the host URI and must be set by
      other APIs.

      Note: To use an authorization token with fromHost, use fromHost(URL),

      and then set the AuthorizationToken property on the created SpeechConfig
      instance.

      Note: Added in version 1.9.0.
    syntax:
      content: 'static function fromHost(hostName: URL, subscriptionKey?: string)'
      parameters:
        - id: hostName
          type:
            - URL
          description: ''
        - id: subscriptionKey
          type:
            - string
          description: >-
            The subscription key. If a subscription key is not specified, an
            authorization token must be set.
          optional: true
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
        description: A speech factory instance.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromSubscription
    name: 'fromSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Static instance of SpeechTranslationConfig returned by passing a
      subscription key and service region.
    syntax:
      content: >-
        static function fromSubscription(subscriptionKey: string, region:
        string)
      parameters:
        - id: subscriptionKey
          type:
            - string
          description: The subscription key.
        - id: region
          type:
            - string
          description: >-
            The region name (see the <a
            href="https://aka.ms/csspeech/region">region page</a>).
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
        description: The speech translation config.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.getProperty
    name: 'getProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the current value of an arbitrary property.
    syntax:
      content: 'function getProperty(name: string, def?: string)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the property to query.
        - id: def
          type:
            - string
          description: The value to return in case the property is not known.
          optional: true
      return:
        type:
          - string
        description: 'The current value, or provided default, of the given property.'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.outputFormat
    name: outputFormat
    fullName: outputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets speech recognition output format (simple or detailed).

      Note: This output format is for speech recognition result, use
      [SpeechConfig.speechSynthesisOutputFormat] to

      get synthesized audio output format.

      Gets/Sets speech recognition output format (simple or detailed).

      Note: This output format is for speech recognition result, use
      [SpeechConfig.speechSynthesisOutputFormat] to

      set synthesized audio output format.
    syntax:
      content: OutputFormat outputFormat
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.OutputFormat
        description: Returns the output format.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.region
    name: region
    fullName: region
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string region
      return:
        type:
          - string
        description: The region set on the config.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.requestWordLevelTimestamps
    name: requestWordLevelTimestamps()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function requestWordLevelTimestamps()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProfanity
    name: setProfanity(ProfanityOption)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProfanity(profanity: ProfanityOption)'
      parameters:
        - id: profanity
          type:
            - microsoft-cognitiveservices-speech-sdk.ProfanityOption
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProperty
    name: 'setProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets a named property as value
    syntax:
      content: 'function setProperty(name: string, value: string)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the property.
        - id: value
          type:
            - string
          description: |
            The value.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy
    name: 'setProxy(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sets the proxy configuration.
      Only relevant in Node.js environments.
      Added in version 1.4.0.
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: The host name of the proxy server.
        - id: proxyPort
          type:
            - number
          description: |
            The port number of the proxy server.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy_1
    name: 'setProxy(string, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sets the proxy configuration.
      Only relevant in Node.js environments.
      Added in version 1.4.0.
    syntax:
      content: >-
        function setProxy(proxyHostName: string, proxyPort: number,
        proxyUserName: string, proxyPassword: string)
      parameters:
        - id: proxyHostName
          type:
            - string
          description: >-
            The host name of the proxy server, without the protocol scheme
            (http://)
        - id: proxyPort
          type:
            - number
          description: ''
        - id: proxyUserName
          type:
            - string
          description: The user name of the proxy server.
        - id: proxyPassword
          type:
            - string
          description: |
            The password of the proxy server.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setServiceProperty
    name: 'setServiceProperty(string, string, ServicePropertyChannel)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setServiceProperty(name: string, value: string, channel:
        ServicePropertyChannel)
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: channel
          type:
            - microsoft-cognitiveservices-speech-sdk.ServicePropertyChannel
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets/Sets the speech recognition language.
    syntax:
      content: any speechRecognitionLanguage
      return:
        type:
          - any
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechSynthesisLanguage
    name: speechSynthesisLanguage
    fullName: speechSynthesisLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the language of the speech synthesizer.
      Sets the language of the speech synthesizer.
    syntax:
      content: string speechSynthesisLanguage
      return:
        type:
          - string
        description: |-
          Returns the speech synthesis language.
          Added in version 1.11.0.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechSynthesisOutputFormat
    name: speechSynthesisOutputFormat
    fullName: speechSynthesisOutputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the speech synthesis output format.
      Sets the speech synthesis output format (e.g. Riff16Khz16BitMonoPcm).
    syntax:
      content: SpeechSynthesisOutputFormat speechSynthesisOutputFormat
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechSynthesisOutputFormat
        description: |-
          Returns the speech synthesis output format
          Added in version 1.11.0.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechSynthesisVoiceName
    name: speechSynthesisVoiceName
    fullName: speechSynthesisVoiceName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets the voice of the speech synthesizer.

      Sets the voice of the speech synthesizer. (see <a
      href="https://aka.ms/speech/tts-languages">available voices</a>).
    syntax:
      content: string speechSynthesisVoiceName
      return:
        type:
          - string
        description: |-
          Returns the speech synthesis voice.
          Added in version 1.11.0.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.subscriptionKey
    name: subscriptionKey
    fullName: subscriptionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string subscriptionKey
      return:
        type:
          - string
        description: The subscription key set on the config.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.targetLanguages
    name: targetLanguages
    fullName: targetLanguages
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the (text) target language to translate into.
    syntax:
      content: 'string[] targetLanguages'
      return:
        type:
          - 'string[]'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.voiceName
    name: voiceName
    fullName: voiceName
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the selected voice name.
      Gets/Sets voice of the translated language, enable voice synthesis output.
    syntax:
      content: string voiceName
      return:
        type:
          - string
        description: The voice name.
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
    name: OutputFormat
    spec.typeScript:
      - name: OutputFormat
        fullName: OutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesisOutputFormat
    name: SpeechSynthesisOutputFormat
    spec.typeScript:
      - name: SpeechSynthesisOutputFormat
        fullName: SpeechSynthesisOutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesisOutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.ProfanityOption
    name: ProfanityOption
    spec.typeScript:
      - name: ProfanityOption
        fullName: ProfanityOption
        uid: microsoft-cognitiveservices-speech-sdk.ProfanityOption
  - uid: microsoft-cognitiveservices-speech-sdk.ServicePropertyChannel
    name: ServicePropertyChannel
    spec.typeScript:
      - name: ServicePropertyChannel
        fullName: ServicePropertyChannel
        uid: microsoft-cognitiveservices-speech-sdk.ServicePropertyChannel
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    spec.typeScript:
      - name: SpeechTranslationConfig
        fullName: SpeechTranslationConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
