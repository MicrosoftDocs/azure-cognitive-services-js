### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer
    name: Recognizer
    fullName: Recognizer
    children:
      - microsoft-cognitiveservices-speech-sdk.Recognizer.close
      - microsoft-cognitiveservices-speech-sdk.Recognizer.dispose
      - microsoft-cognitiveservices-speech-sdk.Recognizer.enableTelemetry
      - microsoft-cognitiveservices-speech-sdk.Recognizer.internalData
      - microsoft-cognitiveservices-speech-sdk.Recognizer.sessionStarted
      - microsoft-cognitiveservices-speech-sdk.Recognizer.sessionStopped
      - microsoft-cognitiveservices-speech-sdk.Recognizer.speechEndDetected
      - microsoft-cognitiveservices-speech-sdk.Recognizer.speechStartDetected
      - >-
        microsoft-cognitiveservices-speech-sdk.Recognizer.startContinuousRecognitionAsyncImpl
      - microsoft-cognitiveservices-speech-sdk.Recognizer.telemetryEnabled
    langs:
      - typeScript
    type: class
    summary: >-
      Defines the base class Recognizer which mainly contains common event
      handlers.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Dispose of associated resources.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.dispose
    name: dispose(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This method performs cleanup of resources.

      The Boolean parameter disposing indicates whether the method is called

      from Dispose (if disposing is true) or from the finalizer (if disposing is
      false).

      Derived classes should override this method to dispose resource if needed.
    syntax:
      content: 'function dispose(disposing: boolean)'
      parameters:
        - id: disposing
          type:
            - boolean
          description: |
            Flag to request disposal.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.enableTelemetry
    name: enableTelemetry(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: This method globally enables or disables telemetry.
    syntax:
      content: 'static function enableTelemetry(enabled: boolean)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: |
            Global setting for telemetry collection.
            If set to true, telemetry information like microphone errors,
            recognition errors are collected and sent to Microsoft.
            If set to false, no telemetry is sent to Microsoft.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.internalData
    name: internalData
    fullName: internalData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: object internalData
      return:
        type:
          - object
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.sessionStarted
    name: sessionStarted
    fullName: sessionStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session started events.
    syntax:
      content: >-
        public sessionStarted: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.sessionStopped
    name: sessionStopped
    fullName: sessionStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session stopped events.
    syntax:
      content: >-
        public sessionStopped: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.speechEndDetected
    name: speechEndDetected
    fullName: speechEndDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for speech stopped events.
    syntax:
      content: >-
        public speechEndDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.speechStartDetected
    name: speechStartDetected
    fullName: speechStartDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for speech started events.
    syntax:
      content: >-
        public speechStartDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Recognizer.startContinuousRecognitionAsyncImpl
    name: >-
      startContinuousRecognitionAsyncImpl(RecognitionMode, () => void, (e:
      string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousRecognitionAsyncImpl(recognitionMode:
        RecognitionMode, cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: recognitionMode
          type:
            - microsoft-cognitiveservices-speech-sdk.RecognitionMode
          description: ''
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer.telemetryEnabled
    name: telemetryEnabled
    fullName: telemetryEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: This method returns the current state of the telemetry setting.
    syntax:
      content: static boolean telemetryEnabled
      return:
        type:
          - boolean
        description: 'true if the telemetry is enabled, false otherwise.'
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
    name: RecognitionMode
    spec.typeScript:
      - name: RecognitionMode
        fullName: RecognitionMode
        uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
