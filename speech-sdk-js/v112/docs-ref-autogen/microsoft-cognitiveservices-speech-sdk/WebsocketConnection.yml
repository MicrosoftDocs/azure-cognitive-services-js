### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection
    name: WebsocketConnection
    fullName: WebsocketConnection
    children:
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.dispose
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.events
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.id
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.isDisposed
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.open
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.read
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.send
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.state
      - microsoft-cognitiveservices-speech-sdk.WebsocketConnection.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.dispose
    name: dispose
    fullName: dispose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'dispose: () => void'
      return:
        type:
          - () => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.events
    name: events
    fullName: events
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: EventSource<ConnectionEvent> events
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.ConnectionEvent>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string id
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.isDisposed
    name: isDisposed
    fullName: isDisposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isDisposed: () => boolean'
      return:
        type:
          - () => boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.open
    name: open
    fullName: open
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'open: () => Promise<ConnectionOpenResponse>'
      return:
        type:
          - () => Promise<ConnectionOpenResponse>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.read
    name: read
    fullName: read
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'read: () => Promise<ConnectionMessage>'
      return:
        type:
          - () => Promise<ConnectionMessage>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.send
    name: send
    fullName: send
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'send: (message: ConnectionMessage) => Promise<boolean>'
      return:
        type:
          - '(message: ConnectionMessage) => Promise<boolean>'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.state
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'state: () => ConnectionState'
      return:
        type:
          - () => ConnectionState
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.WebsocketConnection.constructor
    name: >-
      WebsocketConnection(string, IStringDictionary<string>,
      IStringDictionary<string>, IWebsocketMessageFormatter, ProxyInfo, string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new WebsocketConnection(uri: string, queryParameters:
        IStringDictionary<string>, headers: IStringDictionary<string>,
        messageFormatter: IWebsocketMessageFormatter, proxyInfo: ProxyInfo,
        connectionId?: string)
      parameters:
        - id: uri
          type:
            - string
          description: ''
        - id: queryParameters
          type:
            - microsoft-cognitiveservices-speech-sdk.IStringDictionary<string>
          description: ''
        - id: headers
          type:
            - microsoft-cognitiveservices-speech-sdk.IStringDictionary<string>
          description: ''
        - id: messageFormatter
          type:
            - microsoft-cognitiveservices-speech-sdk.IWebsocketMessageFormatter
          description: ''
        - id: proxyInfo
          type:
            - microsoft-cognitiveservices-speech-sdk.ProxyInfo
          description: ''
        - id: connectionId
          type:
            - string
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.IStringDictionary<string>
    name: IStringDictionary<string>
    spec.typeScript:
      - name: IStringDictionary
        fullName: IStringDictionary
        uid: microsoft-cognitiveservices-speech-sdk.IStringDictionary
      - name: <string>
        fullName: <string>
  - uid: microsoft-cognitiveservices-speech-sdk.IWebsocketMessageFormatter
    name: IWebsocketMessageFormatter
    spec.typeScript:
      - name: IWebsocketMessageFormatter
        fullName: IWebsocketMessageFormatter
        uid: microsoft-cognitiveservices-speech-sdk.IWebsocketMessageFormatter
  - uid: microsoft-cognitiveservices-speech-sdk.ProxyInfo
    name: ProxyInfo
    spec.typeScript:
      - name: ProxyInfo
        fullName: ProxyInfo
        uid: microsoft-cognitiveservices-speech-sdk.ProxyInfo
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.ConnectionEvent>
    name: ConnectionEvent>
    spec.typeScript:
      - name: EventSource
        fullName: EventSource
        uid: microsoft-cognitiveservices-speech-sdk.EventSource
      - name: <
        fullName: <
      - name: ConnectionEvent
        fullName: ConnectionEvent
        uid: microsoft-cognitiveservices-speech-sdk.ConnectionEvent
      - name: '>'
        fullName: '>'
