### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession
    name: RequestSession
    fullName: RequestSession
    children:
      - microsoft-cognitiveservices-speech-sdk.RequestSession.audioNodeId
      - microsoft-cognitiveservices-speech-sdk.RequestSession.bytesSent
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.currentTurnAudioOffset
      - microsoft-cognitiveservices-speech-sdk.RequestSession.dispose
      - microsoft-cognitiveservices-speech-sdk.RequestSession.getTelemetry
      - microsoft-cognitiveservices-speech-sdk.RequestSession.isRecognizing
      - microsoft-cognitiveservices-speech-sdk.RequestSession.isSpeechEnded
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.listenForServiceTelemetry
      - microsoft-cognitiveservices-speech-sdk.RequestSession.onAudioSent
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.onAudioSourceAttachCompleted
      - microsoft-cognitiveservices-speech-sdk.RequestSession.onAuthCompleted
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.onConnectionEstablishCompleted
      - microsoft-cognitiveservices-speech-sdk.RequestSession.onHypothesis
      - microsoft-cognitiveservices-speech-sdk.RequestSession.onPhraseRecognized
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.onPreConnectionStart
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.onServiceRecognized
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.onServiceTurnEndResponse
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.onServiceTurnStartResponse
      - microsoft-cognitiveservices-speech-sdk.RequestSession.onSpeechEnded
      - microsoft-cognitiveservices-speech-sdk.RequestSession.onStopRecognizing
      - microsoft-cognitiveservices-speech-sdk.RequestSession.recogNumber
      - microsoft-cognitiveservices-speech-sdk.RequestSession.requestId
      - microsoft-cognitiveservices-speech-sdk.RequestSession.constructor
      - microsoft-cognitiveservices-speech-sdk.RequestSession.sessionId
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.startNewRecognition
      - >-
        microsoft-cognitiveservices-speech-sdk.RequestSession.turnCompletionPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.audioNodeId
    name: audioNodeId
    fullName: audioNodeId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string audioNodeId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.bytesSent
    name: bytesSent
    fullName: bytesSent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number bytesSent
      return:
        type:
          - number
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.currentTurnAudioOffset
    name: currentTurnAudioOffset
    fullName: currentTurnAudioOffset
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number currentTurnAudioOffset
      return:
        type:
          - number
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.dispose
    name: dispose
    fullName: dispose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'dispose: (error?: string) => void'
      return:
        type:
          - '(error?: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.getTelemetry
    name: getTelemetry
    fullName: getTelemetry
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'getTelemetry: () => string'
      return:
        type:
          - () => string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.isRecognizing
    name: isRecognizing
    fullName: isRecognizing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isRecognizing
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.isSpeechEnded
    name: isSpeechEnded
    fullName: isSpeechEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isSpeechEnded
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.listenForServiceTelemetry
    name: listenForServiceTelemetry(IEventSource<PlatformEvent>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listenForServiceTelemetry(eventSource:
        IEventSource<PlatformEvent>)
      parameters:
        - id: eventSource
          type:
            - >-
              microsoft-cognitiveservices-speech-sdk.IEventSource<microsoft-cognitiveservices-speech-sdk.PlatformEvent>
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onAudioSent
    name: onAudioSent(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onAudioSent(bytesSent: number)'
      parameters:
        - id: bytesSent
          type:
            - number
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.onAudioSourceAttachCompleted
    name: onAudioSourceAttachCompleted
    fullName: onAudioSourceAttachCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onAudioSourceAttachCompleted: (audioNode: ReplayableAudioNode, isError:
        boolean, error?: string) => void
      return:
        type:
          - >-
            (audioNode: ReplayableAudioNode, isError: boolean, error?: string)
            => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onAuthCompleted
    name: onAuthCompleted
    fullName: onAuthCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onAuthCompleted: (isError: boolean, error?: string) => void'
      return:
        type:
          - '(isError: boolean, error?: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.onConnectionEstablishCompleted
    name: onConnectionEstablishCompleted
    fullName: onConnectionEstablishCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onConnectionEstablishCompleted: (statusCode: number, reason?: string) =>
        void
      return:
        type:
          - '(statusCode: number, reason?: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onHypothesis
    name: onHypothesis(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onHypothesis(offset: number)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onPhraseRecognized
    name: onPhraseRecognized(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onPhraseRecognized(offset: number)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onPreConnectionStart
    name: onPreConnectionStart
    fullName: onPreConnectionStart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onPreConnectionStart: (authFetchEventId: string, connectionId: string)
        => void
      return:
        type:
          - '(authFetchEventId: string, connectionId: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onServiceRecognized
    name: onServiceRecognized(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onServiceRecognized(offset: number)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.onServiceTurnEndResponse
    name: onServiceTurnEndResponse
    fullName: onServiceTurnEndResponse
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onServiceTurnEndResponse: (continuousRecognition: boolean) => void'
      return:
        type:
          - '(continuousRecognition: boolean) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.onServiceTurnStartResponse
    name: onServiceTurnStartResponse
    fullName: onServiceTurnStartResponse
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onServiceTurnStartResponse: () => void'
      return:
        type:
          - () => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onSpeechEnded
    name: onSpeechEnded()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function onSpeechEnded()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.onStopRecognizing
    name: onStopRecognizing()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function onStopRecognizing()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.recogNumber
    name: recogNumber
    fullName: recogNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number recogNumber
      return:
        type:
          - number
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.requestId
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string requestId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.constructor
    name: RequestSession(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new RequestSession(audioSourceId: string)'
      parameters:
        - id: audioSourceId
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.sessionId
    name: sessionId
    fullName: sessionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string sessionId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.RequestSession.startNewRecognition
    name: startNewRecognition()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function startNewRecognition()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.RequestSession.turnCompletionPromise
    name: turnCompletionPromise
    fullName: turnCompletionPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Promise<boolean> turnCompletionPromise
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.Promise<boolean>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Promise<boolean>
    name: Promise<boolean>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <boolean>
        fullName: <boolean>
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IEventSource<microsoft-cognitiveservices-speech-sdk.PlatformEvent>
    name: PlatformEvent>
    spec.typeScript:
      - name: IEventSource
        fullName: IEventSource
        uid: microsoft-cognitiveservices-speech-sdk.IEventSource
      - name: <
        fullName: <
      - name: PlatformEvent
        fullName: PlatformEvent
        uid: microsoft-cognitiveservices-speech-sdk.PlatformEvent
      - name: '>'
        fullName: '>'
