### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource
    name: MicAudioSource
    fullName: MicAudioSource
    children:
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.attach
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.detach
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.deviceInfo
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.events
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.format
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.id
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.constructor
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.setProperty
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.turnOff
      - microsoft-cognitiveservices-speech-sdk.MicAudioSource.turnOn
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.attach
    name: attach
    fullName: attach
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'attach: (audioNodeId: string) => Promise<IAudioStreamNode>'
      return:
        type:
          - '(audioNodeId: string) => Promise<IAudioStreamNode>'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.detach
    name: detach
    fullName: detach
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'detach: (audioNodeId: string) => void'
      return:
        type:
          - '(audioNodeId: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.deviceInfo
    name: deviceInfo
    fullName: deviceInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Promise<ISpeechConfigAudioDevice> deviceInfo
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.ISpeechConfigAudioDevice>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.events
    name: events
    fullName: events
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: EventSource<AudioSourceEvent> events
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.AudioSourceEvent>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.format
    name: format
    fullName: format
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Promise<AudioStreamFormatImpl> format
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<AudioStreamFormatImpl>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: () => string'
      return:
        type:
          - () => string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.constructor
    name: 'MicAudioSource(IRecorder, string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new MicAudioSource(privRecorder: IRecorder, deviceId?: string,
        audioSourceId?: string)
      parameters:
        - id: privRecorder
          type:
            - microsoft-cognitiveservices-speech-sdk.IRecorder
          description: ''
        - id: deviceId
          type:
            - string
          description: ''
          optional: true
        - id: audioSourceId
          type:
            - string
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.setProperty
    name: 'setProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProperty(name: string, value: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.turnOff
    name: turnOff
    fullName: turnOff
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'turnOff: () => Promise<boolean>'
      return:
        type:
          - () => Promise<boolean>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.MicAudioSource.turnOn
    name: turnOn
    fullName: turnOn
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'turnOn: () => Promise<boolean>'
      return:
        type:
          - () => Promise<boolean>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.IRecorder
    name: IRecorder
    spec.typeScript:
      - name: IRecorder
        fullName: IRecorder
        uid: microsoft-cognitiveservices-speech-sdk.IRecorder
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.ISpeechConfigAudioDevice>
    name: ISpeechConfigAudioDevice>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <
        fullName: <
      - name: ISpeechConfigAudioDevice
        fullName: ISpeechConfigAudioDevice
        uid: microsoft-cognitiveservices-speech-sdk.ISpeechConfigAudioDevice
      - name: '>'
        fullName: '>'
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.AudioSourceEvent>
    name: AudioSourceEvent>
    spec.typeScript:
      - name: EventSource
        fullName: EventSource
        uid: microsoft-cognitiveservices-speech-sdk.EventSource
      - name: <
        fullName: <
      - name: AudioSourceEvent
        fullName: AudioSourceEvent
        uid: microsoft-cognitiveservices-speech-sdk.AudioSourceEvent
      - name: '>'
        fullName: '>'
  - uid: microsoft-cognitiveservices-speech-sdk.Promise<AudioStreamFormatImpl>
    name: Promise<AudioStreamFormatImpl>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <AudioStreamFormatImpl>
        fullName: <AudioStreamFormatImpl>
