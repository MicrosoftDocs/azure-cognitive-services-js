### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter
    name: ConversationServiceAdapter
    fullName: ConversationServiceAdapter
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.activityTemplate
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.agentConfig
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.audioSource
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.connect
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.connectAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.connectionEvents
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.conversationTranslatorToken
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.disconnect
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.disconnectAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.dispose
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.dynamicGrammar
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.isDisposed
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.recognitionMode
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.recognize
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.sendMessage
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.sendMessageAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.serviceEvents
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.speechContext
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.stopRecognizing
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.telemetryData
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.telemetryDataEnabled
    langs:
      - typeScript
    type: class
    summary: >-
      The service adapter handles sending and receiving messages to the
      Conversation Translator websocket.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.ServiceRecognizerBase
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.activityTemplate
    name: activityTemplate
    fullName: activityTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string activityTemplate
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.agentConfig
    name: agentConfig
    fullName: agentConfig
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: AgentConfig agentConfig
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.AgentConfig
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.audioSource
    name: audioSource
    fullName: audioSource
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: IAudioSource audioSource
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IAudioSource
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.connect
    name: connect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function connect()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.connectAsync
    name: 'connectAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function connectAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.connectionEvents
    name: connectionEvents
    fullName: connectionEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: EventSource<ConnectionEvent> connectionEvents
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.ConnectionEvent>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.constructor
    name: >-
      ConversationServiceAdapter(IAuthentication, IConnectionFactory,
      IAudioSource, RecognizerConfig, ConversationTranslatorRecognizer)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new ConversationServiceAdapter(authentication: IAuthentication,
        connectionFactory: IConnectionFactory, audioSource: IAudioSource,
        recognizerConfig: RecognizerConfig, conversationServiceConnector:
        ConversationTranslatorRecognizer)
      parameters:
        - id: authentication
          type:
            - microsoft-cognitiveservices-speech-sdk.IAuthentication
          description: ''
        - id: connectionFactory
          type:
            - microsoft-cognitiveservices-speech-sdk.IConnectionFactory
          description: ''
        - id: audioSource
          type:
            - microsoft-cognitiveservices-speech-sdk.IAudioSource
          description: ''
        - id: recognizerConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.RecognizerConfig
          description: ''
        - id: conversationServiceConnector
          type:
            - >-
              microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.conversationTranslatorToken
    name: conversationTranslatorToken
    fullName: conversationTranslatorToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: any conversationTranslatorToken
      return:
        type:
          - any
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.disconnect
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.disconnectAsync
    name: 'disconnectAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disconnectAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.dispose
    name: dispose(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function dispose(reason?: string)'
      parameters:
        - id: reason
          type:
            - string
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.dynamicGrammar
    name: dynamicGrammar
    fullName: dynamicGrammar
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: DynamicGrammarBuilder dynamicGrammar
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.DynamicGrammarBuilder
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.isDisposed
    name: isDisposed()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDisposed()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.recognitionMode
    name: recognitionMode
    fullName: recognitionMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: RecognitionMode recognitionMode
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.RecognitionMode
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.recognize
    name: >-
      recognize(RecognitionMode, (e: SpeechRecognitionResult) => void, (e:
      string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recognize(recoMode: RecognitionMode, successCallback: (e:
        SpeechRecognitionResult) => void, errorCallBack: (e: string) => void)
      parameters:
        - id: recoMode
          type:
            - microsoft-cognitiveservices-speech-sdk.RecognitionMode
          description: ''
        - id: successCallback
          type:
            - '(e: SpeechRecognitionResult) => void'
          description: ''
        - id: errorCallBack
          type:
            - '(e: string) => void'
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.Promise<boolean>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.sendMessage
    name: sendMessage(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendMessage(message: string)'
      parameters:
        - id: message
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.sendMessageAsync
    name: sendMessageAsync
    fullName: sendMessageAsync
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sendMessageAsync: (message: string) => Promise<boolean>'
      return:
        type:
          - '(message: string) => Promise<boolean>'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.serviceEvents
    name: serviceEvents
    fullName: serviceEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: EventSource<ServiceEvent> serviceEvents
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.ServiceEvent>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.speechContext
    name: speechContext
    fullName: speechContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: SpeechContext speechContext
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechContext
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.stopRecognizing
    name: stopRecognizing()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function stopRecognizing()
      parameters: []
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.Promise<boolean>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.telemetryData
    name: telemetryData
    fullName: telemetryData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static telemetryData: (json: string) => void'
      return:
        type:
          - '(json: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationServiceAdapter.telemetryDataEnabled
    name: telemetryDataEnabled
    fullName: telemetryDataEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static telemetryDataEnabled: boolean'
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.ServiceRecognizerBase
    name: ServiceRecognizerBase
    spec.typeScript:
      - name: ServiceRecognizerBase
        fullName: ServiceRecognizerBase
        uid: microsoft-cognitiveservices-speech-sdk.ServiceRecognizerBase
  - uid: microsoft-cognitiveservices-speech-sdk.IAuthentication
    name: IAuthentication
    spec.typeScript:
      - name: IAuthentication
        fullName: IAuthentication
        uid: microsoft-cognitiveservices-speech-sdk.IAuthentication
  - uid: microsoft-cognitiveservices-speech-sdk.IConnectionFactory
    name: IConnectionFactory
    spec.typeScript:
      - name: IConnectionFactory
        fullName: IConnectionFactory
        uid: microsoft-cognitiveservices-speech-sdk.IConnectionFactory
  - uid: microsoft-cognitiveservices-speech-sdk.IAudioSource
    name: IAudioSource
    spec.typeScript:
      - name: IAudioSource
        fullName: IAudioSource
        uid: microsoft-cognitiveservices-speech-sdk.IAudioSource
  - uid: microsoft-cognitiveservices-speech-sdk.RecognizerConfig
    name: RecognizerConfig
    spec.typeScript:
      - name: RecognizerConfig
        fullName: RecognizerConfig
        uid: microsoft-cognitiveservices-speech-sdk.RecognizerConfig
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer
    name: ConversationTranslatorRecognizer
    spec.typeScript:
      - name: ConversationTranslatorRecognizer
        fullName: ConversationTranslatorRecognizer
        uid: >-
          microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer
  - uid: microsoft-cognitiveservices-speech-sdk.AgentConfig
    name: AgentConfig
    spec.typeScript:
      - name: AgentConfig
        fullName: AgentConfig
        uid: microsoft-cognitiveservices-speech-sdk.AgentConfig
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.ConnectionEvent>
    name: ConnectionEvent>
    spec.typeScript:
      - name: EventSource
        fullName: EventSource
        uid: microsoft-cognitiveservices-speech-sdk.EventSource
      - name: <
        fullName: <
      - name: ConnectionEvent
        fullName: ConnectionEvent
        uid: microsoft-cognitiveservices-speech-sdk.ConnectionEvent
      - name: '>'
        fullName: '>'
  - uid: microsoft-cognitiveservices-speech-sdk.DynamicGrammarBuilder
    name: DynamicGrammarBuilder
    spec.typeScript:
      - name: DynamicGrammarBuilder
        fullName: DynamicGrammarBuilder
        uid: microsoft-cognitiveservices-speech-sdk.DynamicGrammarBuilder
  - uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
    name: RecognitionMode
    spec.typeScript:
      - name: RecognitionMode
        fullName: RecognitionMode
        uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.EventSource<microsoft-cognitiveservices-speech-sdk.ServiceEvent>
    name: ServiceEvent>
    spec.typeScript:
      - name: EventSource
        fullName: EventSource
        uid: microsoft-cognitiveservices-speech-sdk.EventSource
      - name: <
        fullName: <
      - name: ServiceEvent
        fullName: ServiceEvent
        uid: microsoft-cognitiveservices-speech-sdk.ServiceEvent
      - name: '>'
        fullName: '>'
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechContext
    name: SpeechContext
    spec.typeScript:
      - name: SpeechContext
        fullName: SpeechContext
        uid: microsoft-cognitiveservices-speech-sdk.SpeechContext
  - uid: microsoft-cognitiveservices-speech-sdk.Callback
    name: Callback
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: microsoft-cognitiveservices-speech-sdk.Callback
  - uid: microsoft-cognitiveservices-speech-sdk.Promise<boolean>
    name: Promise<boolean>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <boolean>
        fullName: <boolean>
