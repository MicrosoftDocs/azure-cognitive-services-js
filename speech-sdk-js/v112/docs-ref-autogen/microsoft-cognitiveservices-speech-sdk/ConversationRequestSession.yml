### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationRequestSession
    name: ConversationRequestSession
    fullName: ConversationRequestSession
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.completionPromise
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.dispose
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onAuthCompleted
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onConnectionEstablishCompleted
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onPreConnectionStart
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onServiceTurnEndResponse
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.requestId
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.sessionId
    langs:
      - typeScript
    type: class
    summary: >-
      Placeholder class for the Conversation Request Session. Based off
      RequestSession.

      TODO: define what telemetry is required.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.completionPromise
    name: completionPromise
    fullName: completionPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Promise<boolean> completionPromise
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.Promise<boolean>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.constructor
    name: ConversationRequestSession(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ConversationRequestSession(sessionId: string)'
      parameters:
        - id: sessionId
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.dispose
    name: dispose
    fullName: dispose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'dispose: (error?: string) => void'
      return:
        type:
          - '(error?: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onAuthCompleted
    name: onAuthCompleted
    fullName: onAuthCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onAuthCompleted: (isError: boolean, error?: string) => void'
      return:
        type:
          - '(isError: boolean, error?: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onConnectionEstablishCompleted
    name: onConnectionEstablishCompleted
    fullName: onConnectionEstablishCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onConnectionEstablishCompleted: (statusCode: number, reason?: string) =>
        void
      return:
        type:
          - '(statusCode: number, reason?: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onPreConnectionStart
    name: onPreConnectionStart
    fullName: onPreConnectionStart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onPreConnectionStart: (authFetchEventId: string, connectionId: string)
        => void
      return:
        type:
          - '(authFetchEventId: string, connectionId: string) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.onServiceTurnEndResponse
    name: onServiceTurnEndResponse
    fullName: onServiceTurnEndResponse
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onServiceTurnEndResponse: (continuousRecognition: boolean) => void'
      return:
        type:
          - '(continuousRecognition: boolean) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.requestId
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string requestId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationRequestSession.sessionId
    name: sessionId
    fullName: sessionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string sessionId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Promise<boolean>
    name: Promise<boolean>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <boolean>
        fullName: <boolean>
