### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation
    name: Conversation
    fullName: Conversation
    children:
      - microsoft-cognitiveservices-speech-sdk.Conversation.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.Conversation.config
      - microsoft-cognitiveservices-speech-sdk.Conversation.conversationId
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.createConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.deleteConversationAsync
      - microsoft-cognitiveservices-speech-sdk.Conversation.endConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.lockConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.muteAllParticipantsAsync
      - microsoft-cognitiveservices-speech-sdk.Conversation.muteParticipantAsync
      - microsoft-cognitiveservices-speech-sdk.Conversation.properties
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.removeParticipantAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.speechRecognitionLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.startConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.unlockConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.unmuteAllParticipantsAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.Conversation.unmuteParticipantAsync
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string authorizationToken
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.config
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: SpeechTranslationConfig config
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.conversationId
    name: conversationId
    fullName: conversationId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string conversationId
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Conversation.createConversationAsync
    name: 'createConversationAsync(SpeechTranslationConfig, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a conversation
    syntax:
      content: >-
        static function createConversationAsync(speechConfig:
        SpeechTranslationConfig, cb?: Callback, err?: Callback)
      parameters:
        - id: speechConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
          description: ''
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: |+

          optional: true
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.Conversation
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Conversation.deleteConversationAsync
    name: 'deleteConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete a conversation. After this no one will be able to join the
      conversation.
    syntax:
      content: 'function deleteConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.endConversationAsync
    name: 'endConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: End a conversation.
    syntax:
      content: 'function endConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.lockConversationAsync
    name: 'lockConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lock a conversation. This will prevent new participants from joining.
    syntax:
      content: 'function lockConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Conversation.muteAllParticipantsAsync
    name: 'muteAllParticipantsAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Mute all other participants in the conversation. After this no other
      participants will

      have their speech recognitions broadcast, nor be able to send text
      messages.
    syntax:
      content: 'function muteAllParticipantsAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.muteParticipantAsync
    name: 'muteParticipantAsync(string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Mute a participant.
    syntax:
      content: >-
        function muteParticipantAsync(userId: string, cb?: Callback, err?:
        Callback)
      parameters:
        - id: userId
          type:
            - string
          description: |
            A user identifier
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: PropertyCollection properties
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.removeParticipantAsync
    name: 'removeParticipantAsync(string | IParticipant | IUser, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Remove a participant from a conversation using the user id, Participant or
      User object
    syntax:
      content: >-
        function removeParticipantAsync(userId: string | IParticipant | IUser,
        cb?: Callback, err?: Callback)
      parameters:
        - id: userId
          type:
            - >-
              string | microsoft-cognitiveservices-speech-sdk.IParticipant |
              microsoft-cognitiveservices-speech-sdk.IUser
          description: |
            A user identifier
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Conversation.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string speechRecognitionLanguage
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.startConversationAsync
    name: 'startConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Start a conversation.
    syntax:
      content: 'function startConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Conversation.unlockConversationAsync
    name: 'unlockConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Unlocks a conversation.
    syntax:
      content: 'function unlockConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Conversation.unmuteAllParticipantsAsync
    name: 'unmuteAllParticipantsAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Unmute all other participants in the conversation.
    syntax:
      content: 'function unmuteAllParticipantsAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation.unmuteParticipantAsync
    name: 'unmuteParticipantAsync(string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Unmute a participant.
    syntax:
      content: >-
        function unmuteParticipantAsync(userId: string, cb?: Callback, err?:
        Callback)
      parameters:
        - id: userId
          type:
            - string
          description: |
            A user identifier
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    spec.typeScript:
      - name: SpeechTranslationConfig
        fullName: SpeechTranslationConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.Callback
    name: Callback
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: microsoft-cognitiveservices-speech-sdk.Callback
  - uid: >-
      string | microsoft-cognitiveservices-speech-sdk.IParticipant |
      microsoft-cognitiveservices-speech-sdk.IUser
    name: IUser
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: IParticipant
        fullName: IParticipant
        uid: microsoft-cognitiveservices-speech-sdk.IParticipant
      - name: ' | '
        fullName: ' | '
      - name: IUser
        fullName: IUser
        uid: microsoft-cognitiveservices-speech-sdk.IUser
  - uid: microsoft-cognitiveservices-speech-sdk.Conversation
    name: Conversation
    spec.typeScript:
      - name: Conversation
        fullName: Conversation
        uid: microsoft-cognitiveservices-speech-sdk.Conversation
