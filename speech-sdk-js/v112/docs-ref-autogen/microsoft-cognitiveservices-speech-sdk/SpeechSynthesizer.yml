### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer
    name: SpeechSynthesizer
    fullName: SpeechSynthesizer
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.buildSsml
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.close
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.dispose
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.internalData
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.properties
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.speakSsmlAsync
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.speakTextAsync
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.SynthesisCanceled
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.synthesisCompleted
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.synthesisStarted
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.synthesizing
      - microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.wordBoundary
    langs:
      - typeScript
    type: class
    summary: |-
      Defines the class SpeechSynthesizer for text to speech.
      Added in version 1.11.0
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the authorization token used to communicate with the service.
      Gets/Sets the authorization token used to communicate with the service.
    syntax:
      content: string authorizationToken
      return:
        type:
          - string
        description: Authorization token.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.buildSsml
    name: 'buildSsml(string, PropertyCollection)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function buildSsml(text: string, properties: PropertyCollection)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: properties
          type:
            - microsoft-cognitiveservices-speech-sdk.PropertyCollection
          description: ''
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Dispose of associated resources.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.dispose
    name: dispose(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This method performs cleanup of resources.

      The Boolean parameter disposing indicates whether the method is called

      from Dispose (if disposing is true) or from the finalizer (if disposing is
      false).

      Derived classes should override this method to dispose resource if needed.
    syntax:
      content: 'function dispose(disposing: boolean)'
      parameters:
        - id: disposing
          type:
            - boolean
          description: |
            Flag to request disposal.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.internalData
    name: internalData
    fullName: internalData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: object internalData
      return:
        type:
          - object
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The collection of properties and their values defined for this
      SpeechSynthesizer.
    syntax:
      content: PropertyCollection properties
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: >-
          The collection of properties and their values defined for this
          SpeechSynthesizer.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.speakSsmlAsync
    name: >-
      speakSsmlAsync(string, (e: SpeechSynthesisResult) => void, (e: string) =>
      void, AudioOutputStream | PushAudioOutputStreamCallback | PathLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Executes speech synthesis on SSML.
      The task returns the synthesis result.
    syntax:
      content: >-
        function speakSsmlAsync(ssml: string, cb?: (e: SpeechSynthesisResult) =>
        void, err?: (e: string) => void, stream?: AudioOutputStream |
        PushAudioOutputStreamCallback | PathLike)
      parameters:
        - id: ssml
          type:
            - string
          description: SSML to be synthesized.
        - id: cb
          type:
            - '(e: SpeechSynthesisResult) => void'
          description: Callback that received the SpeechSynthesisResult.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: Callback invoked in case of an error.
          optional: true
        - id: stream
          type:
            - >-
              microsoft-cognitiveservices-speech-sdk.AudioOutputStream |
              microsoft-cognitiveservices-speech-sdk.PushAudioOutputStreamCallback
              | PathLike
          description: |
            AudioOutputStream to receive the synthesized audio.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.speakTextAsync
    name: >-
      speakTextAsync(string, (e: SpeechSynthesisResult) => void, (e: string) =>
      void, AudioOutputStream | PushAudioOutputStreamCallback | PathLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Executes speech synthesis on plain text.
      The task returns the synthesis result.
    syntax:
      content: >-
        function speakTextAsync(text: string, cb?: (e: SpeechSynthesisResult) =>
        void, err?: (e: string) => void, stream?: AudioOutputStream |
        PushAudioOutputStreamCallback | PathLike)
      parameters:
        - id: text
          type:
            - string
          description: Text to be synthesized.
        - id: cb
          type:
            - '(e: SpeechSynthesisResult) => void'
          description: Callback that received the SpeechSynthesisResult.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: Callback invoked in case of an error.
          optional: true
        - id: stream
          type:
            - >-
              microsoft-cognitiveservices-speech-sdk.AudioOutputStream |
              microsoft-cognitiveservices-speech-sdk.PushAudioOutputStreamCallback
              | PathLike
          description: |
            AudioOutputStream to receive the synthesized audio.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.constructor
    name: 'SpeechSynthesizer(SpeechConfig, AudioConfig)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: SpeechSynthesizer constructor.
    syntax:
      content: >-
        new SpeechSynthesizer(speechConfig: SpeechConfig, audioConfig?:
        AudioConfig)
      parameters:
        - id: speechConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeechConfig
          description: An set of initial properties for this synthesizer
        - id: audioConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.AudioConfig
          description: |
            An optional audio configuration associated with the synthesizer
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.SynthesisCanceled
    name: SynthesisCanceled
    fullName: SynthesisCanceled
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for synthesis cancelled events.
    syntax:
      content: >-
        public SynthesisCanceled: (sender: SpeechSynthesizer, event:
        SpeechSynthesisEventArgs) => void
      return:
        type:
          - '(sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.synthesisCompleted
    name: synthesisCompleted
    fullName: synthesisCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for synthesis completed events.
    syntax:
      content: >-
        public synthesisCompleted: (sender: SpeechSynthesizer, event:
        SpeechSynthesisEventArgs) => void
      return:
        type:
          - '(sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.synthesisStarted
    name: synthesisStarted
    fullName: synthesisStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for synthesis start events.
    syntax:
      content: >-
        public synthesisStarted: (sender: SpeechSynthesizer, event:
        SpeechSynthesisEventArgs) => void
      return:
        type:
          - '(sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.synthesizing
    name: synthesizing
    fullName: synthesizing
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for synthesizing events.
    syntax:
      content: >-
        public synthesizing: (sender: SpeechSynthesizer, event:
        SpeechSynthesisEventArgs) => void
      return:
        type:
          - '(sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer.wordBoundary
    name: wordBoundary
    fullName: wordBoundary
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for word boundary events
    syntax:
      content: >-
        public wordBoundary: (sender: SpeechSynthesizer, event:
        SpeechSynthesisWordBoundaryEventArgs) => void
      return:
        type:
          - >-
            (sender: SpeechSynthesizer, event:
            SpeechSynthesisWordBoundaryEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
    name: AudioConfig
    spec.typeScript:
      - name: AudioConfig
        fullName: AudioConfig
        uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.AudioOutputStream |
      microsoft-cognitiveservices-speech-sdk.PushAudioOutputStreamCallback |
      PathLike
    name: PushAudioOutputStreamCallback | PathLike
    spec.typeScript:
      - name: AudioOutputStream
        fullName: AudioOutputStream
        uid: microsoft-cognitiveservices-speech-sdk.AudioOutputStream
      - name: ' | '
        fullName: ' | '
      - name: PushAudioOutputStreamCallback
        fullName: PushAudioOutputStreamCallback
        uid: microsoft-cognitiveservices-speech-sdk.PushAudioOutputStreamCallback
      - name: ' | PathLike'
        fullName: ' | PathLike'
