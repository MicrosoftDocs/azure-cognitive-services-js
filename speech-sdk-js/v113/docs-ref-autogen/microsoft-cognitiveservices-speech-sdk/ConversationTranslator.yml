### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator
    name: ConversationTranslator
    fullName: ConversationTranslator
    children:
      - microsoft-cognitiveservices-speech-sdk.ConversationTranslator.canceled
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.conversationExpiration
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.constructor
      - microsoft-cognitiveservices-speech-sdk.ConversationTranslator.dispose
      - microsoft-cognitiveservices-speech-sdk.ConversationTranslator.isDisposed
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.joinConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.joinConversationAsync_1
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.leaveConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.participants
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.participantsChanged
      - microsoft-cognitiveservices-speech-sdk.ConversationTranslator.properties
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.sendTextMessageAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.sessionStarted
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.sessionStopped
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.speechRecognitionLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.startTranscribingAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.stopTranscribingAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.textMessageReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.transcribed
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslator.transcribing
    langs:
      - typeScript
    type: class
    summary: 'Join, leave or connect to a conversation.'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        canceled: (sender: IConversationTranslator, event:
        ConversationTranslationCanceledEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationCanceledEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.conversationExpiration
    name: conversationExpiration
    fullName: conversationExpiration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        conversationExpiration: (sender: IConversationTranslator, event:
        ConversationExpirationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationExpirationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.constructor
    name: ConversationTranslator(AudioConfig)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ConversationTranslator(audioConfig?: AudioConfig)'
      parameters:
        - id: audioConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.AudioConfig
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.dispose
    name: dispose(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function dispose(reason?: string)'
      parameters:
        - id: reason
          type:
            - string
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.isDisposed
    name: isDisposed()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDisposed()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.joinConversationAsync
    name: 'joinConversationAsync(IConversation, string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Join a conversation. If this is the host, pass in the previously created
      Conversation object.
    syntax:
      content: >-
        function joinConversationAsync(conversation: IConversation, nickname:
        string, cb?: Callback, err?: Callback)
      parameters:
        - id: conversation
          type:
            - microsoft-cognitiveservices-speech-sdk.IConversation
          description: ''
        - id: nickname
          type:
            - string
          description: ''
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: |+

          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.joinConversationAsync_1
    name: 'joinConversationAsync(string, string, string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function joinConversationAsync(conversationId: string, nickname: string,
        lang: string, cb?: Callback, err?: Callback)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: nickname
          type:
            - string
          description: ''
        - id: lang
          type:
            - string
          description: ''
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.leaveConversationAsync
    name: 'leaveConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Leave the conversation
    syntax:
      content: 'function leaveConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: |+

          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.participants
    name: participants
    fullName: participants
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Participant[] participants'
      return:
        type:
          - 'microsoft-cognitiveservices-speech-sdk.Participant[]'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.participantsChanged
    name: participantsChanged
    fullName: participantsChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        participantsChanged: (sender: IConversationTranslator, event:
        ConversationParticipantsChangedEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationParticipantsChangedEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: PropertyCollection properties
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.sendTextMessageAsync
    name: 'sendTextMessageAsync(string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send a text message
    syntax:
      content: >-
        function sendTextMessageAsync(message: string, cb?: Callback, err?:
        Callback)
      parameters:
        - id: message
          type:
            - string
          description: ''
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: |+

          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.sessionStarted
    name: sessionStarted
    fullName: sessionStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        sessionStarted: (sender: IConversationTranslator, event:
        SessionEventArgs) => void
      return:
        type:
          - '(sender: IConversationTranslator, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.sessionStopped
    name: sessionStopped
    fullName: sessionStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        sessionStopped: (sender: IConversationTranslator, event:
        SessionEventArgs) => void
      return:
        type:
          - '(sender: IConversationTranslator, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string speechRecognitionLanguage
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.startTranscribingAsync
    name: 'startTranscribingAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Start speaking
    syntax:
      content: 'function startTranscribingAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: |+

          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.stopTranscribingAsync
    name: 'stopTranscribingAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stop speaking
    syntax:
      content: 'function stopTranscribingAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: |+

          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslator.textMessageReceived
    name: textMessageReceived
    fullName: textMessageReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        textMessageReceived: (sender: IConversationTranslator, event:
        ConversationTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.transcribed
    name: transcribed
    fullName: transcribed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        transcribed: (sender: IConversationTranslator, event:
        ConversationTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslator.transcribing
    name: transcribing
    fullName: transcribing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        transcribing: (sender: IConversationTranslator, event:
        ConversationTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
    name: AudioConfig
    spec.typeScript:
      - name: AudioConfig
        fullName: AudioConfig
        uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
  - uid: 'microsoft-cognitiveservices-speech-sdk.Participant[]'
    name: 'Participant[]'
    spec.typeScript:
      - name: Participant
        fullName: Participant
        uid: microsoft-cognitiveservices-speech-sdk.Participant
      - name: '[]'
        fullName: '[]'
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.IConversation
    name: IConversation
    spec.typeScript:
      - name: IConversation
        fullName: IConversation
        uid: microsoft-cognitiveservices-speech-sdk.IConversation
  - uid: microsoft-cognitiveservices-speech-sdk.Callback
    name: Callback
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: microsoft-cognitiveservices-speech-sdk.Callback
