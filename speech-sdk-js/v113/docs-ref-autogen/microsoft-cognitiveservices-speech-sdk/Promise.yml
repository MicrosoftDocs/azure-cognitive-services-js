### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.Promise
    name: Promise
    fullName: Promise<T>
    children:
      - microsoft-cognitiveservices-speech-sdk.Promise.continueWith
      - microsoft-cognitiveservices-speech-sdk.Promise.continueWithPromise
      - microsoft-cognitiveservices-speech-sdk.Promise.finally
      - microsoft-cognitiveservices-speech-sdk.Promise.on
      - microsoft-cognitiveservices-speech-sdk.Promise.onSuccessContinueWith
      - >-
        microsoft-cognitiveservices-speech-sdk.Promise.onSuccessContinueWithPromise
      - microsoft-cognitiveservices-speech-sdk.Promise.constructor
      - microsoft-cognitiveservices-speech-sdk.Promise.result
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.continueWith
    name: continueWith
    fullName: continueWith
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        continueWith: (continuationCallback: (promiseResult: PromiseResult<T>)
        => TContinuationResult) => Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (promiseResult: PromiseResult<T>) =>
            TContinuationResult) => Promise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.continueWithPromise
    name: continueWithPromise
    fullName: continueWithPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        continueWithPromise: (continuationCallback: (promiseResult:
        PromiseResult<T>) => Promise<TContinuationResult>) =>
        Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (promiseResult: PromiseResult<T>) =>
            Promise<TContinuationResult>) => Promise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.finally
    name: finally
    fullName: finally
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'finally: (callback: () => void) => Promise<T>'
      return:
        type:
          - '(callback: () => void) => Promise<T>'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.on
    name: 'on'
    fullName: 'on'
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        on: (successCallback: (result: T) => void, errorCallback: (error:
        string) => void) => Promise<T>
      return:
        type:
          - >-
            (successCallback: (result: T) => void, errorCallback: (error:
            string) => void) => Promise<T>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.onSuccessContinueWith
    name: onSuccessContinueWith
    fullName: onSuccessContinueWith
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onSuccessContinueWith: (continuationCallback: (result: T) =>
        TContinuationResult) => Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (result: T) => TContinuationResult) =>
            Promise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Promise.onSuccessContinueWithPromise
    name: onSuccessContinueWithPromise
    fullName: onSuccessContinueWithPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onSuccessContinueWithPromise: (continuationCallback: (result: T) =>
        Promise<TContinuationResult>) => Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (result: T) => Promise<TContinuationResult>)
            => Promise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.constructor
    name: Promise(Sink<T>)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Promise(sink: Sink<T>)'
      parameters:
        - id: sink
          type:
            - microsoft-cognitiveservices-speech-sdk.Sink<T>
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Promise.result
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'result: () => PromiseResult<T>'
      return:
        type:
          - () => PromiseResult<T>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Sink<T>
    name: Sink<T>
    spec.typeScript:
      - name: Sink
        fullName: Sink
        uid: microsoft-cognitiveservices-speech-sdk.Sink
      - name: <T>
        fullName: <T>
