### YamlMime:TSType
name: SpeechRecognizer
uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer
package: microsoft-cognitiveservices-speech-sdk
summary: >-
  Performs speech recognition from microphone, file, or other audio input
  streams, and gets transcribed text as result.
fullName: SpeechRecognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'SpeechRecognizer(SpeechConfig, AudioConfig)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: SpeechRecognizer constructor.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SpeechRecognizer(speechConfig: SpeechConfig, audioConfig?:
        AudioConfig)
      parameters:
        - id: speechConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
          description: an set of initial properties for this recognizer
        - id: audioConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.AudioConfig" />
          description: |
            An optional audio configuration associated with the recognizer
properties:
  - name: authorizationToken
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.authorizationToken
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Gets the authorization token used to communicate with the service.
      Gets/Sets the authorization token used to communicate with the service.
    fullName: authorizationToken
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string authorizationToken
      return:
        type: string
        description: Authorization token.
  - name: canceled
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.canceled
    package: microsoft-cognitiveservices-speech-sdk
    summary: The event canceled signals that an error occurred during recognition.
    fullName: canceled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public canceled: (sender: Recognizer, event:
        SpeechRecognitionCanceledEventArgs) => void
      return:
        type: >-
          (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) =&gt;
          void
        description: ''
  - name: endpointId
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.endpointId
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Gets the endpoint id of a customized speech model that is used for speech
      recognition.
    fullName: endpointId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string endpointId
      return:
        type: string
        description: >-
          the endpoint id of a customized speech model that is used for speech
          recognition.
  - name: internalData
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.internalData
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: internalData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: object internalData
      return:
        type: object
        description: ''
  - name: outputFormat
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.outputFormat
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the output format of recognition.
    fullName: outputFormat
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: OutputFormat outputFormat
      return:
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.OutputFormat" />
        description: The output format of recognition.
  - name: properties
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.properties
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The collection of properties and their values defined for this
      SpeechRecognizer.
    fullName: properties
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: PropertyCollection properties
      return:
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.PropertyCollection"
          />
        description: >-
          The collection of properties and their values defined for this
          SpeechRecognizer.
  - name: recognized
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognized
    package: microsoft-cognitiveservices-speech-sdk
    summary: The event recognized signals that a final recognition result is received.
    fullName: recognized
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public recognized: (sender: Recognizer, event:
        SpeechRecognitionEventArgs) => void
      return:
        type: '(sender: Recognizer, event: SpeechRecognitionEventArgs) =&gt; void'
        description: ''
  - name: recognizing
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognizing
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The event recognizing signals that an intermediate recognition result is
      received.
    fullName: recognizing
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public recognizing: (sender: Recognizer, event:
        SpeechRecognitionEventArgs) => void
      return:
        type: '(sender: Recognizer, event: SpeechRecognitionEventArgs) =&gt; void'
        description: ''
  - name: sessionStarted
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.sessionStarted
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for session started events.
    fullName: sessionStarted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public sessionStarted: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type: '(sender: Recognizer, event: SessionEventArgs) =&gt; void'
        description: ''
  - name: sessionStopped
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.sessionStopped
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for session stopped events.
    fullName: sessionStopped
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public sessionStopped: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type: '(sender: Recognizer, event: SessionEventArgs) =&gt; void'
        description: ''
  - name: speechEndDetected
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechEndDetected
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for speech stopped events.
    fullName: speechEndDetected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public speechEndDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type: '(sender: Recognizer, event: RecognitionEventArgs) =&gt; void'
        description: ''
  - name: speechRecognitionLanguage
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechRecognitionLanguage
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the spoken language of recognition.
    fullName: speechRecognitionLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string speechRecognitionLanguage
      return:
        type: string
        description: The spoken language of recognition.
  - name: speechStartDetected
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.speechStartDetected
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for speech started events.
    fullName: speechStartDetected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public speechStartDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type: '(sender: Recognizer, event: RecognitionEventArgs) =&gt; void'
        description: ''
  - name: telemetryEnabled
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.telemetryEnabled
    package: microsoft-cognitiveservices-speech-sdk
    summary: This method returns the current state of the telemetry setting.
    fullName: telemetryEnabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: static boolean telemetryEnabled
      return:
        type: boolean
        description: 'true if the telemetry is enabled, false otherwise.'
methods:
  - name: close()
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.close
    package: microsoft-cognitiveservices-speech-sdk
    summary: closes all external resources held by an instance of this class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function close()
  - name: dispose(boolean)
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.dispose
    package: microsoft-cognitiveservices-speech-sdk
    summary: Disposes any resources held by the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function dispose(disposing: boolean)'
      parameters:
        - id: disposing
          type: boolean
          description: |
            true if disposing the object.
  - name: enableTelemetry(boolean)
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.enableTelemetry
    package: microsoft-cognitiveservices-speech-sdk
    summary: This method globally enables or disables telemetry.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function enableTelemetry(enabled: boolean)'
      parameters:
        - id: enabled
          type: boolean
          description: |
            Global setting for telemetry collection.
            If set to true, telemetry information like microphone errors,
            recognition errors are collected and sent to Microsoft.
            If set to false, no telemetry is sent to Microsoft.
  - name: 'FromConfig(SpeechConfig, AutoDetectSourceLanguageConfig, AudioConfig)'
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.FromConfig
    package: microsoft-cognitiveservices-speech-sdk
    summary: SpeechRecognizer constructor.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function FromConfig(speechConfig: SpeechConfig,
        autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig,
        audioConfig?: AudioConfig)
      parameters:
        - id: speechConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
          description: an set of initial properties for this recognizer
        - id: autoDetectSourceLanguageConfig
          type: >-
            <xref
            uid="microsoft-cognitiveservices-speech-sdk.AutoDetectSourceLanguageConfig"
            />
          description: >-
            An source language detection configuration associated with the
            recognizer
        - id: audioConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.AudioConfig" />
          description: |
            An optional audio configuration associated with the recognizer
      return:
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechRecognizer" />
        description: ''
  - name: >-
      recognizeOnceAsync((e: SpeechRecognitionResult) => void, (e: string) =>
      void)
    uid: microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.recognizeOnceAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Starts speech recognition, and stops after the first utterance is
      recognized.

      The task returns the recognition text as result.

      Note: RecognizeOnceAsync() returns when the first utterance has been
      recognized,
            so it is suitable only for single shot recognition
            like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void,
        err?: (e: string) => void)
      parameters:
        - id: cb
          type: '(e: SpeechRecognitionResult) =&gt; void'
          description: Callback that received the SpeechRecognitionResult.
        - id: err
          type: '(e: string) =&gt; void'
          description: |
            Callback invoked in case of an error.
  - name: 'startContinuousRecognitionAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startContinuousRecognitionAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Starts speech recognition, until stopContinuousRecognitionAsync() is
      called.

      User must subscribe to events to receive recognition results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousRecognitionAsync(cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: Callback invoked once the recognition has started.
        - id: err
          type: '(e: string) =&gt; void'
          description: |
            Callback invoked in case of an error.
  - name: >-
      startContinuousRecognitionAsyncImpl(RecognitionMode, () => void, (e:
      string) => void)
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startContinuousRecognitionAsyncImpl
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousRecognitionAsyncImpl(recognitionMode:
        RecognitionMode, cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: recognitionMode
          type: >-
            <xref uid="microsoft-cognitiveservices-speech-sdk.RecognitionMode"
            />
          description: ''
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(e: string) =&gt; void'
          description: ''
  - name: >-
      startKeywordRecognitionAsync(KeywordRecognitionModel, () => void, (e:
      string) => void)
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.startKeywordRecognitionAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Starts speech recognition with keyword spotting, until
      stopKeywordRecognitionAsync() is called.
      User must subscribe to events to receive recognition results.
      Note: Key word spotting functionality is only available on the
           Speech Devices SDK. This functionality is currently not included in the SDK itself.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startKeywordRecognitionAsync(model: KeywordRecognitionModel,
        cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: model
          type: >-
            <xref
            uid="microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel"
            />
          description: |-
            The keyword recognition model that
                   specifies the keyword to be recognized.
        - id: cb
          type: () =&gt; void
          description: Callback invoked once the recognition has started.
        - id: err
          type: '(e: string) =&gt; void'
          description: |
            Callback invoked in case of an error.
  - name: 'stopContinuousRecognitionAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.stopContinuousRecognitionAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Stops continuous speech recognition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousRecognitionAsync(cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: Callback invoked once the recognition has stopped.
        - id: err
          type: '(e: string) =&gt; void'
          description: |
            Callback invoked in case of an error.
  - name: 'stopKeywordRecognitionAsync(() => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeechRecognizer.stopKeywordRecognitionAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Stops continuous speech recognition.
      Note: Key word spotting functionality is only available on the
            Speech Devices SDK. This functionality is currently not included in the SDK itself.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string)
        => void)
      parameters:
        - id: cb
          type: () =&gt; void
          description: Callback invoked once the recognition has stopped.
        - id: err
          type: '(e: string) =&gt; void'
          description: |
            Callback invoked in case of an error.
extends: <xref uid="microsoft-cognitiveservices-speech-sdk.Recognizer" />
