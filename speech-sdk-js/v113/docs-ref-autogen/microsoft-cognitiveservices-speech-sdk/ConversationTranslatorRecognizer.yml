### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer
    name: ConversationTranslatorRecognizer
    fullName: ConversationTranslatorRecognizer
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.canceled
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.close
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.connect
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.connectionClosed
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.connectionOpened
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.conversation
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.conversationExpiration
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.disconnect
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.enableTelemetry
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.internalData
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.isDisposed
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.lockRoomCommandReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.muteAllCommandReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantJoinCommandReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantLeaveCommandReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantsChanged
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantsListReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantUpdateCommandReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.properties
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendChangeNicknameRequest
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendEjectRequest
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendLockRequest
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendMessageRequest
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendMuteAllRequest
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendMuteRequest
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sessionStarted
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sessionStopped
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.speechEndDetected
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.speechRecognitionLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.speechStartDetected
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.startContinuousRecognitionAsyncImpl
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.telemetryEnabled
      - >-
        microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.translationReceived
    langs:
      - typeScript
    type: class
    summary: >-
      Sends messages to the Conversation Translator websocket and listens for
      incoming events containing websocket messages.

      Based off the recognizers in the SDK folder.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.Recognizer
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        canceled: (sender: IConversationTranslatorRecognizer, event:
        ConversationTranslationCanceledEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ConversationTranslationCanceledEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Close and dispose the recognizer
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.connect
    name: 'connect(string, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Connect to the recognizer
    syntax:
      content: >-
        function connect(token: string, cb?: () => void, err?: (e: string) =>
        void)
      parameters:
        - id: token
          type:
            - string
          description: |+

        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.connectionClosed
    name: connectionClosed
    fullName: connectionClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        connectionClosed: (sender: IConversationTranslatorRecognizer, event:
        SessionEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event: SessionEventArgs)
            => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.connectionOpened
    name: connectionOpened
    fullName: connectionOpened
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        connectionOpened: (sender: IConversationTranslatorRecognizer, event:
        SessionEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event: SessionEventArgs)
            => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.conversation
    name: conversation
    fullName: conversation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: any conversation
      return:
        type:
          - any
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.conversationExpiration
    name: conversationExpiration
    fullName: conversationExpiration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        conversationExpiration: (sender: IConversationTranslatorRecognizer,
        event: ConversationExpirationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ConversationExpirationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.constructor
    name: 'ConversationTranslatorRecognizer(SpeechTranslationConfig, AudioConfig)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new ConversationTranslatorRecognizer(speechConfig:
        SpeechTranslationConfig, audioConfig?: AudioConfig)
      parameters:
        - id: speechConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
          description: ''
        - id: audioConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.AudioConfig
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.disconnect
    name: 'disconnect(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Disconnect from the recognizer
    syntax:
      content: 'function disconnect(cb?: () => void, err?: (e: string) => void)'
      parameters:
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.enableTelemetry
    name: enableTelemetry(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: This method globally enables or disables telemetry.
    syntax:
      content: 'static function enableTelemetry(enabled: boolean)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: |
            Global setting for telemetry collection.
            If set to true, telemetry information like microphone errors,
            recognition errors are collected and sent to Microsoft.
            If set to false, no telemetry is sent to Microsoft.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.internalData
    name: internalData
    fullName: internalData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: object internalData
      return:
        type:
          - object
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.isDisposed
    name: isDisposed()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDisposed()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.lockRoomCommandReceived
    name: lockRoomCommandReceived
    fullName: lockRoomCommandReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        lockRoomCommandReceived: (sender: IConversationTranslatorRecognizer,
        event: LockRoomEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            LockRoomEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.muteAllCommandReceived
    name: muteAllCommandReceived
    fullName: muteAllCommandReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        muteAllCommandReceived: (sender: IConversationTranslatorRecognizer,
        event: MuteAllEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event: MuteAllEventArgs)
            => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantJoinCommandReceived
    name: participantJoinCommandReceived
    fullName: participantJoinCommandReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        participantJoinCommandReceived: (sender:
        IConversationTranslatorRecognizer, event: ParticipantEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ParticipantEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantLeaveCommandReceived
    name: participantLeaveCommandReceived
    fullName: participantLeaveCommandReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        participantLeaveCommandReceived: (sender:
        IConversationTranslatorRecognizer, event: ParticipantEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ParticipantEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantsChanged
    name: participantsChanged
    fullName: participantsChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        participantsChanged: (sender: IConversationTranslatorRecognizer, event:
        ConversationParticipantsChangedEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ConversationParticipantsChangedEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantsListReceived
    name: participantsListReceived
    fullName: participantsListReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        participantsListReceived: (sender: IConversationTranslatorRecognizer,
        event: ParticipantsListEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ParticipantsListEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.participantUpdateCommandReceived
    name: participantUpdateCommandReceived
    fullName: participantUpdateCommandReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        participantUpdateCommandReceived: (sender:
        IConversationTranslatorRecognizer, event: ParticipantAttributeEventArgs)
        => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ParticipantAttributeEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: Return the properties for the recognizer
    syntax:
      content: PropertyCollection properties
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendChangeNicknameRequest
    name: 'sendChangeNicknameRequest(string, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the mute participant command to the websocket
    syntax:
      content: >-
        function sendChangeNicknameRequest(nickname: string, cb?: () => void,
        err?: (e: string) => void)
      parameters:
        - id: nickname
          type:
            - string
          description: ''
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendEjectRequest
    name: 'sendEjectRequest(string, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the eject participant command to the websocket
    syntax:
      content: >-
        function sendEjectRequest(participantId: string, cb?: () => void, err?:
        (e: string) => void)
      parameters:
        - id: participantId
          type:
            - string
          description: |+

        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendLockRequest
    name: 'sendLockRequest(boolean, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the lock conversation command to the websocket
    syntax:
      content: >-
        function sendLockRequest(isLocked: boolean, cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: isLocked
          type:
            - boolean
          description: |+

        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendMessageRequest
    name: 'sendMessageRequest(string, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the text message command to the websocket
    syntax:
      content: >-
        function sendMessageRequest(message: string, cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: message
          type:
            - string
          description: |+

        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendMuteAllRequest
    name: 'sendMuteAllRequest(boolean, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the mute all participants command to the websocket
    syntax:
      content: >-
        function sendMuteAllRequest(isMuted: boolean, cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: isMuted
          type:
            - boolean
          description: |+

        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sendMuteRequest
    name: 'sendMuteRequest(string, boolean, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the mute participant command to the websocket
    syntax:
      content: >-
        function sendMuteRequest(participantId: string, isMuted: boolean, cb?:
        () => void, err?: (e: string) => void)
      parameters:
        - id: participantId
          type:
            - string
          description: ''
        - id: isMuted
          type:
            - boolean
          description: |+

        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sessionStarted
    name: sessionStarted
    fullName: sessionStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session started events.
    syntax:
      content: >-
        public sessionStarted: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.sessionStopped
    name: sessionStopped
    fullName: sessionStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session stopped events.
    syntax:
      content: >-
        public sessionStopped: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.speechEndDetected
    name: speechEndDetected
    fullName: speechEndDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for speech stopped events.
    syntax:
      content: >-
        public speechEndDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Return the speech language used by the recognizer
    syntax:
      content: string speechRecognitionLanguage
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.speechStartDetected
    name: speechStartDetected
    fullName: speechStartDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for speech started events.
    syntax:
      content: >-
        public speechStartDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.startContinuousRecognitionAsyncImpl
    name: >-
      startContinuousRecognitionAsyncImpl(RecognitionMode, () => void, (e:
      string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startContinuousRecognitionAsyncImpl(recognitionMode:
        RecognitionMode, cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: recognitionMode
          type:
            - microsoft-cognitiveservices-speech-sdk.RecognitionMode
          description: ''
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.telemetryEnabled
    name: telemetryEnabled
    fullName: telemetryEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: This method returns the current state of the telemetry setting.
    syntax:
      content: static boolean telemetryEnabled
      return:
        type:
          - boolean
        description: 'true if the telemetry is enabled, false otherwise.'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.ConversationTranslatorRecognizer.translationReceived
    name: translationReceived
    fullName: translationReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        translationReceived: (sender: IConversationTranslatorRecognizer, event:
        ConversationReceivedTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslatorRecognizer, event:
            ConversationReceivedTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer
    name: Recognizer
    spec.typeScript:
      - name: Recognizer
        fullName: Recognizer
        uid: microsoft-cognitiveservices-speech-sdk.Recognizer
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    spec.typeScript:
      - name: SpeechTranslationConfig
        fullName: SpeechTranslationConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
  - uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
    name: AudioConfig
    spec.typeScript:
      - name: AudioConfig
        fullName: AudioConfig
        uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
    name: RecognitionMode
    spec.typeScript:
      - name: RecognitionMode
        fullName: RecognitionMode
        uid: microsoft-cognitiveservices-speech-sdk.RecognitionMode
