### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.IConversationTranslator
    name: IConversationTranslator
    fullName: IConversationTranslator
    children:
      - microsoft-cognitiveservices-speech-sdk.IConversationTranslator.canceled
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.conversationExpiration
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.joinConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.joinConversationAsync_1
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.leaveConversationAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.participantsChanged
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.properties
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.sendTextMessageAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.sessionStarted
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.sessionStopped
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.speechRecognitionLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.startTranscribingAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.stopTranscribingAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.textMessageReceived
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.transcribed
      - >-
        microsoft-cognitiveservices-speech-sdk.IConversationTranslator.transcribing
    langs:
      - typeScript
    type: interface
    summary: >-
      A conversation translator that enables a connected experience where
      participants can use their

      own devices to see everyone else's recognitions and IMs in their own
      languages. Participants

      can also speak and send IMs to others.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IConversationTranslator.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event that signals an error with the conversation transcription, or the
      end of the audio stream has been reached.
    syntax:
      content: >-
        canceled: (sender: IConversationTranslator, event:
        ConversationTranslationCanceledEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationCanceledEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.conversationExpiration
    name: conversationExpiration
    fullName: conversationExpiration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event that signals how many more minutes are left before the conversation
      expires.
    syntax:
      content: >-
        conversationExpiration: (sender: IConversationTranslator, event:
        ConversationExpirationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationExpirationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.joinConversationAsync
    name: 'joinConversationAsync(IConversation, string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Start a conversation.
    syntax:
      content: >-
        function joinConversationAsync(conversation: IConversation, nickname:
        string, cb?: Callback, err?: Callback)
      parameters:
        - id: conversation
          type:
            - microsoft-cognitiveservices-speech-sdk.IConversation
          description: ''
        - id: nickname
          type:
            - string
          description: ''
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.joinConversationAsync_1
    name: 'joinConversationAsync(string, string, string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Joins an existing conversation.
    syntax:
      content: >-
        function joinConversationAsync(conversationId: string, nickname: string,
        lang: string, cb?: Callback, err?: Callback)
      parameters:
        - id: conversationId
          type:
            - string
          description: The unique identifier for the conversation to join.
        - id: nickname
          type:
            - string
          description: The display name to use for the current participant.
        - id: lang
          type:
            - string
          description: |
            The speech language to use for the current participant.
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.leaveConversationAsync
    name: 'leaveConversationAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Leave the current conversation. After this is called, you will no longer
      receive any events.
    syntax:
      content: 'function leaveConversationAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.participantsChanged
    name: participantsChanged
    fullName: participantsChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event that signals participants in the conversation have changed (e.g. a
      new participant joined).
    syntax:
      content: >-
        participantsChanged: (sender: IConversationTranslator, event:
        ConversationParticipantsChangedEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationParticipantsChangedEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IConversationTranslator.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets the collection of properties and their values defined for this
      instance.
    syntax:
      content: 'properties: PropertyCollection'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.sendTextMessageAsync
    name: 'sendTextMessageAsync(string, Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends an instant message to all participants in the conversation. This
      instant message

      will be translated into each participant's text language.
    syntax:
      content: >-
        function sendTextMessageAsync(message: string, cb?: Callback, err?:
        Callback)
      parameters:
        - id: message
          type:
            - string
          description: |+

        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.sessionStarted
    name: sessionStarted
    fullName: sessionStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session started events.
    syntax:
      content: >-
        sessionStarted: (sender: IConversationTranslator, event:
        SessionEventArgs) => void
      return:
        type:
          - '(sender: IConversationTranslator, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.sessionStopped
    name: sessionStopped
    fullName: sessionStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines event handler for session stopped events.
    syntax:
      content: >-
        sessionStopped: (sender: IConversationTranslator, event:
        SessionEventArgs) => void
      return:
        type:
          - '(sender: IConversationTranslator, event: SessionEventArgs) => void'
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the language name that is used for recognition.
    syntax:
      content: 'speechRecognitionLanguage: string'
      return:
        type:
          - string
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.startTranscribingAsync
    name: 'startTranscribingAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts sending audio to the conversation service for speech recognition
      and translation. You

      should subscribe to the Transcribing, and Transcribed events to receive
      conversation

      translation results for yourself, and other participants in the
      conversation.
    syntax:
      content: 'function startTranscribingAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.stopTranscribingAsync
    name: 'stopTranscribingAsync(Callback, Callback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Stops sending audio to the conversation service. You will still receive
      Transcribing, and

      and Transcribed events for other participants in the conversation.
    syntax:
      content: 'function stopTranscribingAsync(cb?: Callback, err?: Callback)'
      parameters:
        - id: cb
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
        - id: err
          type:
            - microsoft-cognitiveservices-speech-sdk.Callback
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.textMessageReceived
    name: textMessageReceived
    fullName: textMessageReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event that signals a translated text message from a conversation
      participant.
    syntax:
      content: >-
        textMessageReceived: (sender: IConversationTranslator, event:
        ConversationTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IConversationTranslator.transcribed
    name: transcribed
    fullName: transcribed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The event recognized signals that a final  conversation translation result
      is received.
    syntax:
      content: >-
        transcribed: (sender: IConversationTranslator, event:
        ConversationTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IConversationTranslator.transcribing
    name: transcribing
    fullName: transcribing
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The event recognizing signals that an intermediate conversation
      translation result is received.
    syntax:
      content: >-
        transcribing: (sender: IConversationTranslator, event:
        ConversationTranslationEventArgs) => void
      return:
        type:
          - >-
            (sender: IConversationTranslator, event:
            ConversationTranslationEventArgs) => void
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.IConversation
    name: IConversation
    spec.typeScript:
      - name: IConversation
        fullName: IConversation
        uid: microsoft-cognitiveservices-speech-sdk.IConversation
  - uid: microsoft-cognitiveservices-speech-sdk.Callback
    name: Callback
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: microsoft-cognitiveservices-speech-sdk.Callback
