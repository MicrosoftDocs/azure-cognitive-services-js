### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationManager
    name: ConversationManager
    fullName: ConversationManager
    children:
      - microsoft-cognitiveservices-speech-sdk.ConversationManager.constructor
      - microsoft-cognitiveservices-speech-sdk.ConversationManager.createOrJoin
      - microsoft-cognitiveservices-speech-sdk.ConversationManager.leave
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationManager.constructor
    name: ConversationManager()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new ConversationManager()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationManager.createOrJoin
    name: 'createOrJoin(PropertyCollection, string, any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Make a POST request to the Conversation Manager service endpoint to create
      or join a conversation.
    syntax:
      content: >-
        function createOrJoin(args: PropertyCollection, conversationCode:
        string, cb?: any, err?: any)
      parameters:
        - id: args
          type:
            - microsoft-cognitiveservices-speech-sdk.PropertyCollection
          description: ''
        - id: conversationCode
          type:
            - string
          description: ''
        - id: cb
          type:
            - any
          description: ''
          optional: true
        - id: err
          type:
            - any
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.ConversationManager.leave
    name: 'leave(PropertyCollection, string, any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Make a DELETE request to the Conversation Manager service endpoint to
      leave the conversation.
    syntax:
      content: >-
        function leave(args: PropertyCollection, sessionToken: string, cb?: any,
        err?: any)
      parameters:
        - id: args
          type:
            - microsoft-cognitiveservices-speech-sdk.PropertyCollection
          description: ''
        - id: sessionToken
          type:
            - string
          description: ''
        - id: cb
          type:
            - any
          description: ''
          optional: true
        - id: err
          type:
            - any
          description: ''
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
