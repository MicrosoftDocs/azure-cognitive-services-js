### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise
    name: IPromise
    fullName: IPromise<T>
    children:
      - microsoft-cognitiveservices-speech-sdk.IPromise.continueWith
      - microsoft-cognitiveservices-speech-sdk.IPromise.continueWithPromise
      - microsoft-cognitiveservices-speech-sdk.IPromise.finally
      - microsoft-cognitiveservices-speech-sdk.IPromise.on
      - microsoft-cognitiveservices-speech-sdk.IPromise.onSuccessContinueWith
      - >-
        microsoft-cognitiveservices-speech-sdk.IPromise.onSuccessContinueWithPromise
      - microsoft-cognitiveservices-speech-sdk.IPromise.result
    langs:
      - typeScript
    type: interface
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise.continueWith
    name: 'continueWith((promiseResult: PromiseResult<T>) => TContinuationResult)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function continueWith<TContinuationResult>(continuationCallback:
        (promiseResult: PromiseResult<T>) => TContinuationResult)
      parameters:
        - id: continuationCallback
          type:
            - '(promiseResult: PromiseResult<T>) => TContinuationResult'
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IPromise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise.continueWithPromise
    name: >-
      continueWithPromise((promiseResult: PromiseResult<T>) =>
      IPromise<TContinuationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function continueWithPromise<TContinuationResult>(continuationCallback:
        (promiseResult: PromiseResult<T>) => IPromise<TContinuationResult>)
      parameters:
        - id: continuationCallback
          type:
            - '(promiseResult: PromiseResult<T>) => IPromise<TContinuationResult>'
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IPromise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise.finally
    name: finally(() => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function finally(callback: () => void)'
      parameters:
        - id: callback
          type:
            - () => void
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IPromise<T>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise.on
    name: 'on((result: T) => void, (error: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(successCallback: (result: T) => void, errorCallback: (error:
        string) => void)
      parameters:
        - id: successCallback
          type:
            - '(result: T) => void'
          description: ''
        - id: errorCallback
          type:
            - '(error: string) => void'
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IPromise<T>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise.onSuccessContinueWith
    name: 'onSuccessContinueWith((result: T) => TContinuationResult)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        onSuccessContinueWith<TContinuationResult>(continuationCallback:
        (result: T) => TContinuationResult)
      parameters:
        - id: continuationCallback
          type:
            - '(result: T) => TContinuationResult'
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IPromise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IPromise.onSuccessContinueWithPromise
    name: 'onSuccessContinueWithPromise((result: T) => IPromise<TContinuationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        onSuccessContinueWithPromise<TContinuationResult>(continuationCallback:
        (result: T) => IPromise<TContinuationResult>)
      parameters:
        - id: continuationCallback
          type:
            - '(result: T) => IPromise<TContinuationResult>'
          description: ''
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.IPromise<TContinuationResult>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise.result
    name: result()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function result()
      parameters: []
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PromiseResult<T>
        description: ''
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise<TContinuationResult>
    name: IPromise<TContinuationResult>
    spec.typeScript:
      - name: IPromise
        fullName: IPromise
        uid: microsoft-cognitiveservices-speech-sdk.IPromise
      - name: <TContinuationResult>
        fullName: <TContinuationResult>
  - uid: microsoft-cognitiveservices-speech-sdk.IPromise<T>
    name: IPromise<T>
    spec.typeScript:
      - name: IPromise
        fullName: IPromise
        uid: microsoft-cognitiveservices-speech-sdk.IPromise
      - name: <T>
        fullName: <T>
  - uid: microsoft-cognitiveservices-speech-sdk.PromiseResult<T>
    name: PromiseResult<T>
    spec.typeScript:
      - name: PromiseResult
        fullName: PromiseResult
        uid: microsoft-cognitiveservices-speech-sdk.PromiseResult
      - name: <T>
        fullName: <T>
