### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter
    name: SpeakerIdMessageAdapter
    fullName: SpeakerIdMessageAdapter
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.createEnrollment
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.createProfile
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.deleteProfile
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.identifySpeaker
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.resetProfile
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.constructor
      - >-
        microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.verifySpeaker
    langs:
      - typeScript
    type: class
    summary: >-
      Implements methods for speaker recognition classes, sending requests to
      endpoint

      and parsing response into expected format
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.createEnrollment
    name: 'createEnrollment(VoiceProfile, IAudioSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends create enrollment request to endpoint.
    syntax:
      content: >-
        function createEnrollment(profile: VoiceProfile, audioSource:
        IAudioSource)
      parameters:
        - id: profile
          type:
            - microsoft-cognitiveservices-speech-sdk.VoiceProfile
          description: ''
        - id: audioSource
          type:
            - microsoft-cognitiveservices-speech-sdk.IAudioSource
          description: audioSource from which to pull data to send
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
        description: rest response to enrollment request.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.createProfile
    name: 'createProfile(VoiceProfileType, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends create profile request to endpoint.
    syntax:
      content: 'function createProfile(profileType: VoiceProfileType, lang: string)'
      parameters:
        - id: profileType
          type:
            - microsoft-cognitiveservices-speech-sdk.VoiceProfileType
          description: type of voice profile to create.
        - id: lang
          type:
            - string
          description: language/locale of voice profile
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
        description: promised rest response containing id of created profile.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.deleteProfile
    name: deleteProfile(VoiceProfile)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends delete profile request to endpoint.
    syntax:
      content: 'function deleteProfile(profile: VoiceProfile)'
      parameters:
        - id: profile
          type:
            - microsoft-cognitiveservices-speech-sdk.VoiceProfile
          description: voice profile to delete.
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
        description: rest response to deletion request
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.identifySpeaker
    name: 'identifySpeaker(SpeakerIdentificationModel, IAudioSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends identification request to endpoint.
    syntax:
      content: >-
        function identifySpeaker(model: SpeakerIdentificationModel, audioSource:
        IAudioSource)
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeakerIdentificationModel
          description: voice profiles against which to identify.
        - id: audioSource
          type:
            - microsoft-cognitiveservices-speech-sdk.IAudioSource
          description: audioSource from which to pull data to send
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
        description: rest response to enrollment request.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.resetProfile
    name: resetProfile(VoiceProfile)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends reset profile request to endpoint.
    syntax:
      content: 'function resetProfile(profile: VoiceProfile)'
      parameters:
        - id: profile
          type:
            - microsoft-cognitiveservices-speech-sdk.VoiceProfile
          description: voice profile to reset enrollments for.
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
        description: rest response to reset request
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.constructor
    name: SpeakerIdMessageAdapter(SpeakerRecognitionConfig)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SpeakerIdMessageAdapter(config: SpeakerRecognitionConfig)'
      parameters:
        - id: config
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeakerRecognitionConfig
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.SpeakerIdMessageAdapter.verifySpeaker
    name: 'verifySpeaker(SpeakerVerificationModel, IAudioSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends verification request to endpoint.
    syntax:
      content: >-
        function verifySpeaker(model: SpeakerVerificationModel, audioSource:
        IAudioSource)
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeakerVerificationModel
          description: voice model to verify against.
        - id: audioSource
          type:
            - microsoft-cognitiveservices-speech-sdk.IAudioSource
          description: audioSource from which to pull data to send
      return:
        type:
          - >-
            microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
        description: rest response to enrollment request.
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerRecognitionConfig
    name: SpeakerRecognitionConfig
    spec.typeScript:
      - name: SpeakerRecognitionConfig
        fullName: SpeakerRecognitionConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeakerRecognitionConfig
  - uid: microsoft-cognitiveservices-speech-sdk.VoiceProfile
    name: VoiceProfile
    spec.typeScript:
      - name: VoiceProfile
        fullName: VoiceProfile
        uid: microsoft-cognitiveservices-speech-sdk.VoiceProfile
  - uid: microsoft-cognitiveservices-speech-sdk.IAudioSource
    name: IAudioSource
    spec.typeScript:
      - name: IAudioSource
        fullName: IAudioSource
        uid: microsoft-cognitiveservices-speech-sdk.IAudioSource
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Promise<microsoft-cognitiveservices-speech-sdk.IRestResponse>
    name: IRestResponse>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-cognitiveservices-speech-sdk.Promise
      - name: <
        fullName: <
      - name: IRestResponse
        fullName: IRestResponse
        uid: microsoft-cognitiveservices-speech-sdk.IRestResponse
      - name: '>'
        fullName: '>'
  - uid: microsoft-cognitiveservices-speech-sdk.VoiceProfileType
    name: VoiceProfileType
    spec.typeScript:
      - name: VoiceProfileType
        fullName: VoiceProfileType
        uid: microsoft-cognitiveservices-speech-sdk.VoiceProfileType
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerIdentificationModel
    name: SpeakerIdentificationModel
    spec.typeScript:
      - name: SpeakerIdentificationModel
        fullName: SpeakerIdentificationModel
        uid: microsoft-cognitiveservices-speech-sdk.SpeakerIdentificationModel
  - uid: microsoft-cognitiveservices-speech-sdk.SpeakerVerificationModel
    name: SpeakerVerificationModel
    spec.typeScript:
      - name: SpeakerVerificationModel
        fullName: SpeakerVerificationModel
        uid: microsoft-cognitiveservices-speech-sdk.SpeakerVerificationModel
